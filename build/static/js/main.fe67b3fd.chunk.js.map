{"version":3,"sources":["components/IPFS/storehash.js","components/Firebase/firebase.js","components/Nav/SignedIn.js","components/Nav/SignedOut.js","components/Nav/NavigationBar.js","components/Home/welcome.js","components/Auth/login.js","components/Auth/signup.js","components/Dapp/FileRetrieve.js","components/Student/viewStudent.js","components/Home/Footer.js","components/Account/myAccount.js","components/Institute/SearchInstitutes.js","app.jsx","index.js","../node_modules/pdfjs-dist/build sync","components/utils/getWeb3.js","Images/logoOGG.png","Images/navLogo.png","components/Dapp/FileUpload.js","components/IPFS/IPFS.js","Images/logoSmall.png"],"names":["web3__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","web3","n","Web3","window","currentProvider","__webpack_exports__","eth","Contract","constant","inputs","name","type","outputs","payable","stateMutability","signature","firebase_app__WEBPACK_IMPORTED_MODULE_0__","firebase_app__WEBPACK_IMPORTED_MODULE_0___default","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","withRouter","react_default","a","createElement","Fragment","NavItem","NavLink","to","style","color","fontSize","display","activeStyle","fontWeight","onClick","auth","signOut","NavigationBar","Links","currentUser","Nav_SignedIn","Nav_SignedOut","className","backgroundColor","src","logoSmall","alt","width","height","exact","Welcome","align","marginTop","logo","padding","textAlign","href","title","Component","Login","state","email","password","handleChange","e","_this","setState","Object","defineProperty","target","id","value","login","preventDefault","_email","_password","setPersistence","Auth","Persistence","SESSION","then","signInWithEmailAndPassword","u","props","history","push","catch","error","alert","resetPassword","_callee","regenerator_default","wrap","_context","prev","next","sendPasswordResetEmail","stop","maxWidth","this","onChange","placeholder","required","Signup","organizationName","organizationType","country","region","publicEthKey","dropChange","signup","_organizationName","_organizationType","_country","_region","_ethKey","db","database","createUserWithEmailAndPassword","userCredential","ref","child","user","uid","set","Region","EthKey","console","log","pdfjs","GlobalWorkerOptions","workerSrc","concat","version","FileRetrieve","idToSearch","documentDetails","IPFSlink","uploadedAddress","institiuteID","copied","detailsFound","numPages","pageNumber","retrieveDocument","_id","storehash","methods","getDocument","call","sent","length","canReview","uploadDate","componentDidMount","_callee2","_context2","onAuthStateChanged","bind","assertThisInitialized","onDocumentLoadSuccess","_ref3","render","_this$state","paddingTop","lib","text","onCopy","paddingLeft","borderColor","entry","file","onLoadSuccess","viewStudent","studentName","StudentNumber","courseCode","courseName","blockID","findStudent","_studentNumber","_uid","once","snapshot","exists","blockchainKey","val","Footer","myAccount","reviews","loading","forEach","getReviews","loc2","theReviews","i","theVal","_reviewer","key","_date","date","_rating","rating","_text","map","item","marginBottom","SearchInstitutes","instituteName","instituteType","reviewText","getInstitutes","_key","loc","changeRating","newRating","addReview","_callee3","_institiuteID","_newDate","_reviewText","_context3","Date","toDateString","_callee4","_keySearch","_context4","_callee5","_context5","build_default","starRatedColor","numberOfStars","minWidth","minHeight","App","ethAddress","account","authListener","getWeb3","options","address","t0","getAccounts","t1","t2","_this2","_this3","BrowserRouter","Nav_NavigationBar","Switch","Route","path","component","SignUp","FileUpload","assign","acc","ethAdd","SearchInstitute","Home_Footer","ReactDOM","app","document","getElementById","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","Promise","reject","addEventListener","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_web","provider","_web2","ethereum","enable","providers","HttpProvider","p","uniqueRandom","require","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","getFile","files","reader","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","_ref","buffer","Buffer","from","result","_x","apply","arguments","pushToIPFS","_ref2","abrupt","ipfs","add","err","ipfsHash","hash","_x2","addToBlockchain","_ipfsLink","newDate","_account","getTime","sendDocument","send","_x3","_x4","AddMyStuff","_ref4","rand","idForBlockchain","createStudent","_x5","_ref5","_studentName","_courseCode","_courseName","_idForBlockchain","StudentName","CourseCode","CourseName","_x6","_callee6","_context6","C_Users_elite_Desktop_Blockchain_Project_Basalt_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_7__","react__WEBPACK_IMPORTED_MODULE_8___default","onLoad","fontStyle","accept","web3Provider","contracts","host","port","protocol"],"mappings":"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","file":"static/js/main.fe67b3fd.chunk.js","sourcesContent":["/* code based on tutorial at https://itnext.io/build-a-simple-ethereum-interplanetary-file-system-ipfs-react-js-dapp-23ff4914ce4e*/\r\nimport Web3 from 'web3';\r\nconst web3 = new Web3(window.web3.currentProvider);\r\n\r\n/**\r\n * This file stores the address and abi of our smart contract\r\n * These values will need to be updated if a smart contract is changed and recompiled\r\n */\r\n\r\n/* contract address */\r\nconst Kovanaddress = '0x772E24532a39A7D0f55544316514d54a53Dc2b18';\r\nconst address = '0x1309CB274a7d16d489EDCb13424CAeED3f88AE16';\r\n\r\n/* contract abi */\r\nconst abi = [\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"uint64\"\r\n      }\r\n    ],\r\n    \"name\": \"ListOfDocuments\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"id\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"name\": \"ipfsHash\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"name\": \"uploader\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"name\": \"dateUploaded\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"name\": \"userID\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"signature\": \"0x948a6764\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [],\r\n    \"name\": \"documentCount\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"signature\": \"0xa5b16b2e\"\r\n  },\r\n  {\r\n    \"constant\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"_ipfsLocation\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"name\": \"_uploadDate\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"name\": \"_key\",\r\n        \"type\": \"uint64\"\r\n      },\r\n      {\r\n        \"name\": \"_userID\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"name\": \"sendDocument\",\r\n    \"outputs\": [],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\",\r\n    \"signature\": \"0xb4d3fca5\"\r\n  },\r\n  {\r\n    \"constant\": true,\r\n    \"inputs\": [\r\n      {\r\n        \"name\": \"_id\",\r\n        \"type\": \"uint64\"\r\n      }\r\n    ],\r\n    \"name\": \"getDocument\",\r\n    \"outputs\": [\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      },\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"uint256\"\r\n      },\r\n      {\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"payable\": false,\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\",\r\n    \"signature\": \"0x8844d877\"\r\n  }\r\n]\r\n\r\nexport default new web3.eth.Contract(abi, address);","import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/database'\r\n\r\n/** database details and keys for Firebase database\r\n *  Real values are stored in .env file\r\n*/\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGE_SENDER_ID\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;","import React from 'react';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport {NavItem} from 'react-bootstrap';\r\nimport firebase from '../Firebase/firebase';\r\n\r\n/**\r\n *  navigation options for authenticated users \r\n*/\r\nconst SignedIn = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <NavItem><NavLink to='/FileUpload' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>File Upload</NavLink></NavItem>\r\n            <NavItem><NavLink to='/FileRetrieve' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>File Retrieve</NavLink></NavItem>\r\n            <NavItem><NavLink to='/viewStudent' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>View Student</NavLink></NavItem>\r\n            <NavItem><NavLink to='/myAccount' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>My Account</NavLink></NavItem>\r\n            <NavItem><NavLink to='/searchInstitute' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>Search Institute</NavLink></NavItem>\r\n            <NavItem><NavLink to='/login' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}} onClick={() =>firebase.auth().signOut()}>Logout</NavLink></NavItem>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignedIn)","import React from 'react'\r\nimport { NavLink, withRouter} from 'react-router-dom'\r\nimport {NavItem} from 'react-bootstrap';\r\n\r\n/**\r\n * navigation options for unauthenticated users\r\n*/\r\nconst SignedOut = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <NavItem><NavLink to='/login' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>Login</NavLink></NavItem>\r\n            <NavItem><NavLink to='/signup' style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}>Sign Up</NavLink></NavItem>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default withRouter(SignedOut)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport SignedIn from './SignedIn';\r\nimport SignedOut from './SignedOut';\r\nimport logoSmall from '../../Images/navLogo.png';\r\nimport firebase from '../Firebase/firebase';    \r\n\r\n/**\r\n *  Navigation bar component that updates depending on users' auth status \r\n*/\r\nconst NavigationBar = () => {\r\n    var user = firebase.auth().currentUser;\r\n    //will display signed in links only if user exists (aka signed in to firebase)\r\n    const Links = user ? <SignedIn /> : <SignedOut />\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light  \" style={{backgroundColor: \"#B65DF3\"}}>\r\n            <div className=\"container\" style={{backgroundColor: 'rgba(0,0,0,0.0)'}}>\r\n                <img src={logoSmall} alt=\"logo\" style={{width: '5em', height: '5em'}}/>\r\n                <NavLink to='/' exact style={{color: 'white', fontSize: '1.5em', display: 'block'}} activeStyle={{fontWeight: \"bold\",color: \"#121212\"}}> Basalt</NavLink>\r\n                { Links }\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default NavigationBar","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport logo from '../../Images/logoOGG.png';\r\n/**\r\n *  This is the main component or index page \r\n *  This component explains the application and how to use it\r\n */\r\nclass Welcome extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div align=\"center\"className=\"container\" style={{marginTop: '3em'}}>\r\n                <div className=\"\">\r\n                        <img src={logo} alt=\"logo\" style={{width: '30em', height: '30em'}}/>\r\n                </div>\r\n                <br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                    <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> About </h2>\r\n                    <h5 style={{textAlign: 'left', backgroundColor: '#e6e4e2'}}> This application aims to use the Ethereum Blockchain to help connect colleges and businesses\r\n                        around the world. <br/><br/>\r\n\r\n                        Providing a place for these organizations to stop the problem of applicants getting jobs with\r\n                        false credentials. <br /><br/>\r\n\r\n                        This application was created for my final year Software Development project at IT Carlow\r\n                    </h5>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                    <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> How will it work?</h2>\r\n                    <h5 style={{textAlign: 'left', backgroundColor: '#e6e4e2'}}>\r\n                        A college uploads a document containing details about one of their student. (The information they \r\n                        choose to disclose is at the institutes discretion) <br/><br/>\r\n                        \r\n                        The college then uploads the document to this \r\n                        application and it is stored on an IPFS node. The link to that node is stored on the Ethereum Blockchain \r\n                        network. <br/><br/>\r\n\r\n                        The student can then provide a business they wish to apply to with this document or the business may contact \r\n                        the college with this application. The business can then view the students academic credentials with this document. \r\n                    \r\n                    </h5>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                    <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> What will you need? </h2>\r\n                    <h5 style={{textAlign: 'left', backgroundColor: '#e6e4e2'}}> \r\n                        In order to store and recieve documents from the Ethereum Blockchain you will need to download the browser extension\r\n                        <a href=\"https://metamask.io/\"> Metamask.</a> <br/><br/>\r\n                        \r\n                        Once installed it will appear in the top right of your web browser where \r\n                        you need to go and sign up for metamask. (Ensure you never reveal your private account key or your pneumonic seed \r\n                        phrase - we will never ask you for these!) <br /><br/>\r\n\r\n                        It is also recommended that you go to Metamasks' settings and enable private mode, meaning site must request access \r\n                        to your wallet before being able to view your details. <br />\r\n                    </h5>\r\n                    </div>\r\n                </div>\r\n                <br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> Help </h2> \r\n                        <h5 style={{textAlign: 'left', backgroundColor: '#e6e4e2'}}>\r\n                            If you having any issues with this application, try refreshing a page, \r\n                            this may trigger Metamask in the event it didn't start correctly <br/><br/>\r\n\r\n                            If Metamask is having trouble completing a transaction, try restart \r\n                            your account from the metamask menu <br/>\r\n                            (<i>This will delete all the transaction \r\n                            records stored in your metamask so be sure you wish to do this</i>) <br/><br/>\r\n\r\n                            \r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> Contact </h2> \r\n                        <h5 style={{backgroundColor: '#e6e4e2'}}>\r\n                            If you wish to contact me, please email me at: <br/><br/> ngrogan15@gmail.com <br/><br/>\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h2 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}> Thanks </h2>\r\n                        <h5 style={{backgroundColor: '#e6e4e2'}}>\r\n                            Logo made with <a href=\"https://www.designevo.com/en/\" title=\"Free Online Logo Maker\">DesignEvo</a>  <br/><br/>\r\n                            Lecturer Patrick Tobin\r\n                        </h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Welcome);","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport logo from '../../Images/logoOGG.png';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n *  This component handles logging in the user\r\n *  User can also request a password reset\r\n */\r\nclass Login extends Component {\r\n        state = {\r\n            email: '',\r\n            password: ''\r\n        }\r\n    \r\n    /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* login the user */\r\n    login = (e) => {\r\n        e.preventDefault();\r\n        var _email = this.state.email\r\n        var _password = this.state.password\r\n\r\n        firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(() => {\r\n            // Existing and future Auth states are now persisted in the current\r\n            // session only. Closing the window would clear any existing state even\r\n            // if a user forgets to sign out.\r\n            // ...\r\n            // New sign-in will be persisted with session persistence.\r\n            return firebase.auth().signInWithEmailAndPassword(_email, _password).then(\r\n                (u)=>{ (\r\n                    // send user to index page\r\n                    this.props.history.push('/')\r\n                )\r\n                }).catch((error) => {\r\n                    alert(\"invalid login details\")\r\n                    // return user to login page\r\n                    this.props.history.push('/login')\r\n                })\r\n            })\r\n        .catch(function(error) {\r\n        // Handle Errors here\r\n    });\r\n    }\r\n\r\n    /* sends email to user to reset their password */\r\n    resetPassword = async() => {\r\n        firebase.auth().sendPasswordResetEmail(this.state.email).then(function() {\r\n            alert(\"An email has been sent allowing you to reset your password\")\r\n        }).catch(function(error){\r\n            alert(\"an error occured or this is an invalid email address\")\r\n        })\r\n    }\r\n\r\n    /* renders the app */\r\n    render() {\r\n        return (\r\n            <div align=\"center\" style={{marginTop: '7em'}}>\r\n                <form >\r\n                <div className=\"row\" style={{maxWidth: '100%'}}>\r\n                    <div className=\"col-sm\">\r\n                        <img src={logo} alt=\"logo\" style={{width: '25em', height: '25em'}}/>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                    <h1>Login</h1><br/><br/><br/>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.email} onChange={this.handleChange} className=\"form-control\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email Address\" required/> \r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>                            \r\n                            <input value={this.state.password} onChange={this.handleChange} className=\"form-control\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" required/> \r\n                        </div>\r\n                        <br/>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.login}> Login </button>\r\n                        <br/><br/>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.resetPassword}> Forgot password? </button>\r\n                    </div>\r\n                </div>                \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Login);","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\n\r\n/**\r\n *  This component creates a new user in firebase Auth service\r\n *  Also creates new database entry for additional user information\r\n */\r\nclass Signup extends Component {\r\n    \r\n        state = {\r\n            email: '',\r\n            password: '',\r\n            organizationName: '',\r\n            organizationType: '',\r\n            country: '',\r\n            region: '',\r\n            publicEthKey: ''\r\n        }\r\n    \r\n\r\n    /* updates fields when changed */\r\n    handleChange = (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* updates dropdown when changed */\r\n    dropChange = (e) => {\r\n        this.setState({\r\n            organizationType: e.target.value \r\n        })\r\n    }\r\n\r\n    /* add new user and create database reference */\r\n    signup = (e) => {\r\n        e.preventDefault();\r\n        //get user details from state variables\r\n        var _email = this.state.email\r\n        var _organizationName = this.state.organizationName\r\n        var _organizationType = this.state.organizationType\r\n        var _country = this.state.country\r\n        var _region = this.state.region\r\n        var _ethKey = this.state.publicEthKey\r\n\r\n        const db = firebase.database()\r\n        // 1: create the user \r\n        firebase.auth().createUserWithEmailAndPassword(this.state.email,\r\n            this.state.password).then(\r\n                // 2: add a db document with additional details\r\n                (userCredential)=>{ (\r\n                    db.ref().child(\"users\").child(userCredential.user.uid).set(\r\n                        {   email: _email, \r\n                            organizationName: _organizationName, \r\n                            organizationType: _organizationType,\r\n                            country: _country,\r\n                            Region: _region,\r\n                            EthKey: _ethKey\r\n                        },\r\n                         // 3: send user to login page\r\n                        this.props.history.push('/')\r\n                    )\r\n                    ).catch((error) => {\r\n                        console.log(error);\r\n                        alert(\"invalid signup details\")\r\n                        this.props.history.push('/signup')\r\n                    })\r\n        \r\n                }).catch((error) => {\r\n                    console.log(error);\r\n                    alert(\"invalid signup details\")\r\n                    this.props.history.push('/signup')\r\n                })\r\n}\r\n\r\n    /* renders the app */\r\n    render() {\r\n        return (\r\n            <div align=\"center\" style={{marginTop: '7em'}}>\r\n                <h1>Sign Up</h1><br/><br/>\r\n                <form>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group \" style={{width: \"60%\"}}>\r\n                        <label> Email </label>\r\n                        <input value={this.state.email} onChange={this.handleChange} className=\"form-control\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email Address\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group\" style={{width: \"60%\"}}>\r\n                        <label> Organization Type </label>\r\n                        <select className=\"form-control\" id=\"organizationType\" name=\"organizationType\" onChange={this.dropChange} value={this.state.organizationType} required>\r\n                            <option value=\"educational institute\"> Educational Institute </option>\r\n                            <option value=\"business\"> Business </option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group\" style={{width: \"60%\"}}>\r\n                        <label> Country </label>\r\n                        <input  value={this.state.country} onChange={this.handleChange} className=\"form-control\" id=\"country\" type=\"text\" name=\"country\" placeholder=\"What country are you based in?\" required/>\r\n                    </div>                    \r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group\" style={{width: \"60%\"}}>\r\n                        <label> Password </label>\r\n                        <input  value={this.state.password} onChange={this.handleChange} className=\"form-control\" id=\"password\" type=\"password\" name=\"password\" placeholder=\"Password\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group\" style={{width: \"60%\"}}>\r\n                        <label> Organization name </label>\r\n                        <input value={this.state.organizationName} onChange={this.handleChange} className=\"form-control\" id=\"organizationName\" type=\"text\" name=\"organizationName\" placeholder=\"College/Company Name\" required/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"form-group\" style={{width: \"60%\"}}>\r\n                        <label> Region / Province </label>\r\n                        <input  value={this.state.region} onChange={this.handleChange} className=\"form-control\" id=\"region\" type=\"text\" name=\"region\" placeholder=\"What region of the country are you based in?\" required/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <br/><br/>\r\n                    <div className=\"form-group\" style={{width: \"40%\"}}>\r\n                        <label> Public Key of Ethereum wallet </label>\r\n                        <input value={this.state.publicEthKey} onChange={this.handleChange} className=\"form-control\" id=\"publicEthKey\" type=\"text\" name=\"publicEthKey\" placeholder=\"Your PUBLIC Ethereum wallet key\" required/>\r\n                    </div>\r\n                    \r\n                    <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.signup}> Sign Up </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Signup;","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport storehash from '../IPFS/storehash';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\n\r\n/** Assign a service worker for the react-pdf library */\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\n/**\r\n *  This component handles the retrieval of IPFS links from the Blockchain\r\n *  and pdfs from IPFS.\r\n *  This component also displays the pdf in page via the react-pdf library\r\n */\r\n\r\nclass FileRetrieve extends Component {\r\n\r\n    state = {\r\n        idToSearch: '',\r\n        documentDetails: [],\r\n        IPFSlink: null,        \r\n        uploadedAddress: '',\r\n        institiuteID: '',\r\n\r\n        copied: false,\r\n        detailsFound: false,\r\n\r\n        numPages: null,\r\n        pageNumber: 1,\r\n    }\r\n\r\n    /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* gets a document back from the Blockchain */\r\n    retrieveDocument = async (e) => {\r\n        e.preventDefault()\r\n        var _id = this.state.idToSearch\r\n        this.state.documentDetails = await storehash.methods.getDocument(_id).call().catch(console.error);\r\n\r\n        /* check response is empty */\r\n        if(!this.state.documentDetails[0].length){\r\n            alert(\"No entry found\")\r\n            this.setState({IPFSlink: ''})\r\n            this.setState({uploadedAddress: ''})\r\n            this.setState({uploadDate: ''})\r\n            this.setState({canReview: false})\r\n            this.setState({detailsFound: false})\r\n        }\r\n        else {\r\n            //  var seconds = this.state.documentDetails[2]\r\n            //  var date = new Date(seconds);\r\n            this.setState({IPFSlink: this.state.documentDetails[0]})\r\n            this.setState({uploadedAddress: this.state.documentDetails[1]})\r\n            this.setState({institiuteID: this.state.documentDetails[3]})\r\n            this.setState({canReview: true})\r\n            this.setState({detailsFound: true})\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                this.setState({user: firebase.auth().currentUser}) //not needed?\r\n                this.setState({uid: firebase.auth().currentUser.uid })\r\n            } else {\r\n                // No user is signed in.\r\n                //redirect to login\r\n                this.props.history.push('/login')\r\n            }\r\n            }.bind(this))\r\n        }  \r\n\r\n    /* When pdf loads get the number of pages in file */\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n        }\r\n\r\n    render = () => { \r\n        const { pageNumber, numPages } = this.state;\r\n        return (\r\n            !this.state.detailsFound ? \r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}>\r\n            <div className=\"col-sm\"> \r\n                    <h2>Enter key to search:</h2><br/>\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.idToSearch} onChange={this.handleChange} className=\"form-control\" id=\"idToSearch\" type=\"text\" name=\"idToSearch\" placeholder=\"ID\" required/>\r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.retrieveDocument}> Find Document! </button>\r\n                    </form>\r\n                </div>\r\n            </div> :\r\n            \r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}>\r\n                <div className=\"col-sm\"> \r\n                    <h2>Enter key to search:</h2><br/>\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.idToSearch} onChange={this.handleChange} className=\"form-control\" id=\"idToSearch\" type=\"text\" name=\"idToSearch\" placeholder=\"ID\" required/>\r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.retrieveDocument}> Find Document! </button>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-sm\" style={{paddingTop: '5em'}}>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Uploader metamask address</h3></div>\r\n                        <div className=\"col\"><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>IPFS Link</h3></div>\r\n                        <div className=\"col\"><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Uploader account ID</h3></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"><h5>{this.state.uploadedAddress}</h5></div>\r\n                        <div className=\"col\"><h5>{this.state.IPFSlink}</h5></div>\r\n                        <div className=\"col\"><h5>{this.state.institiuteID}</h5></div>\r\n                    </div>\r\n                <br/><br/>\r\n\r\n                    <CopyToClipboard text={this.state.institiuteID}\r\n                        onCopy={() => this.setState({copied: true})}>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}}>Copy uploader's ID</button>\r\n                    </CopyToClipboard>\r\n\r\n                    {this.state.copied ? <span style={{color: '#B65DF3', paddingLeft: '3em'}}>Copied.</span> : null}\r\n                </div>\r\n\r\n                <div align=\"center\"className=\"container\" style={{paddingTop: '3em', borderColor: 'black'}}>\r\n                <Document\r\n                    file = {\"https://ipfs.io/ipfs/\" + this.state.IPFSlink}\r\n                    onLoadSuccess={this.onDocumentLoadSuccess}\r\n                    >\r\n                    <Page pageNumber={pageNumber} />\r\n                </Document>\r\n                <p>Page {pageNumber} of {numPages}</p>\r\n                </div>\r\n                <br/><br/><br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>What do I do with the uploader account ID</h3>\r\n                        <br/>\r\n                        <h4>\r\n                            If you navigate to the <b>Search Institute</b> page you can search that ID and retrieve the uploaders details. <br/><br/>\r\n                            From there you can submit a review of the Institute if you'd like to help others see if they are trustworthy or not.\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(FileRetrieve);","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n * This component allows a user to search for one of their students\r\n */\r\nclass viewStudent extends Component {\r\n    state = {\r\n        user: '',\r\n        uid: '',\r\n\r\n        studentName: '',\r\n        StudentNumber: '',\r\n        courseCode: '',\r\n        courseName: '',\r\n        blockID: '',\r\n\r\n        detailsFound: false,\r\n    }\r\n\r\n    /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* Search firebase database for student details */\r\n    findStudent = (e) => {\r\n        e.preventDefault()\r\n        var _studentNumber = this.state.StudentNumber\r\n        var _uid = this.state.uid\r\n        \r\n        // get reference to database location we want students/currentUser/studentNumber\r\n        const loc = firebase.database().ref('/students/' + _uid + '/' + _studentNumber)\r\n\r\n        loc.once('value').then(snapshot => {\r\n\r\n            if(snapshot.exists()) {\r\n                var blockchainKey = snapshot.child(\"blockchainKey\").val()\r\n                var courseCode = snapshot.child(\"courseCode\").val()\r\n                var courseName = snapshot.child(\"courseName\").val()\r\n                var studentName = snapshot.child(\"studentName\").val()\r\n\r\n                this.setState({\r\n                    blockID: blockchainKey,\r\n                    courseCode: courseCode,\r\n                    courseName: courseName,\r\n                    studentName: studentName,\r\n                    detailsFound: true\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    detailsFound: false\r\n                })\r\n                alert(\"No Student Found\")\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                this.setState({user: firebase.auth().currentUser}) //not needed?\r\n                this.setState({uid: firebase.auth().currentUser.uid })\r\n            } else {\r\n                // No user is signed in.\r\n                //redirect to login\r\n                this.props.history.push('/login')\r\n            }\r\n            }.bind(this))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n\r\n            !this.state.detailsFound ? \r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}> \r\n                <h1> Enter a student's ID to view their details </h1><br/>\r\n\r\n                <div align=\"center\">\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.StudentNumber} onChange={this.handleChange} className=\"form-control\" id=\"StudentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student ID\" required/> \r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.findStudent}> Search </button>\r\n                    </form>\r\n                </div>\r\n            </div> : \r\n\r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}>\r\n                <h1> Enter a student's ID to view their details </h1><br/>\r\n\r\n                <div align=\"center\">\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.StudentNumber} onChange={this.handleChange} className=\"form-control\" id=\"StudentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student ID\" required/> \r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.findStudent}> Search </button>\r\n                    </form>\r\n                </div>\r\n                \r\n                <br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Student Name</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Course Code</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Course Name</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>ID on Blockchain</h3>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.studentName}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.courseCode}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.courseName}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.blockID}</h4>\r\n                    </div>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(viewStudent);","import React, {Component} from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n/**\r\n *  This component is a footer that attaches to the bottom of each page\r\n */\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"footer text-center pt-5 pb-2 fixed-bottom\" style={{backgroundColor: '#B65DF3'}}>\r\n                <div className=\"row\">\r\n                <div className=\"col-sm\">\r\n                    <div className=\"container\" >\r\n                        <h3 className=\"footer-text text-white font-italic\">Neil Grogan</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <div className=\"container\" >\r\n                        <h3 className=\"footer-text text-white font-italic\"><a className=\"text-white\" href=\"https://github.com/NGrogs/Basalt\">Github</a></h3>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Footer);","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport { withRouter } from 'react-router-dom';\r\nimport logoSmall from '../../Images/logoSmall.png';\r\n\r\n/** \r\n *  This component displays the account details of the current user\r\n *  These details are retrieved from a firebase database\r\n*/\r\nclass myAccount extends Component {\r\n    state = {\r\n        user: '',\r\n        uid: '',\r\n\r\n        email: '',\r\n        country: '',\r\n        region: '',\r\n        organizationType: '',\r\n        organizationName: '',\r\n        publicEthKey: '',\r\n\r\n        reviews: [],\r\n        loading: true,\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                this.setState({user: firebase.auth().currentUser}) //not needed?\r\n                this.setState({uid: firebase.auth().currentUser.uid })\r\n            } else {\r\n                // No user is signed in.\r\n                //redirect to login\r\n                this.props.history.push('/login')\r\n            }\r\n            }.bind(this))\r\n            var _uid = this.state.uid\r\n\r\n            /* Get users details from database */\r\n            const loc = firebase.database().ref('/users/' + _uid)\r\n            loc.once('value', snapshot => {\r\n                snapshot.forEach(child => {\r\n                    /* update the state variables to have the values from database */\r\n                    this.setState({\r\n                        email: child.val().email,\r\n                        country: child.val().country,\r\n                        region: child.val().Region,\r\n                        organizationName: child.val().organizationName,\r\n                        organizationType: child.val().organizationType,\r\n                        publicEthKey: child.val().EthKey\r\n                    })\r\n                })\r\n                /* displays the account information */\r\n                this.setState({loading: false})\r\n            })\r\n        }\r\n\r\n    /* Get the reviews for the current user from database */\r\n    getReviews = async (e) => {\r\n        e.preventDefault()\r\n        var _uid = this.state.uid\r\n        // get reviews for the current user\r\n        const loc2 = firebase.database().ref('/reviews/' + _uid)\r\n        var theReviews = []\r\n        loc2.once('value', snapshot => {\r\n            if(snapshot.exists()) {\r\n                var i = 0;\r\n                snapshot.forEach(child => {\r\n                    var theVal = child.val()\r\n                    theReviews.push(theVal)\r\n                    var _reviewer = child.key\r\n                    var _date = theReviews[i].date\r\n                    var _rating = theReviews[i].rating\r\n                    var _text = theReviews[i].text\r\n                    i++\r\n                    this.setState({reviews: this.state.reviews.concat([_reviewer, _date, _rating, _text])})\r\n                })\r\n            }\r\n            else {\r\n                alert(\"No Reviews Found\")\r\n            }\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            this.state.loading ? <div align=\"center\"className=\"container\"> \r\n                <br/><br/>\r\n                <img src={logoSmall} alt=\"logo\" style={{width: '15em', height: '15em'}}/>\r\n                <br/><br/>\r\n                <h1>loading ...</h1> \r\n            \r\n            </div> : \r\n\r\n            <div align=\"center\"className=\"container\">\r\n            <br/><br/>\r\n                <h1> Account Details </h1> <br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Personal</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Organizational</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Location</h3>\r\n                    </div>\r\n                </div>\r\n                <br/>                \r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4><b>Email:</b> {this.state.email}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4><b>Organization Name:</b> {this.state.organizationName}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4><b>Country:</b> {this.state.country}</h4>\r\n                    </div>\r\n                </div>\r\n                <br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\" >\r\n                        <h4><b>Metamask ID:</b> {this.state.publicEthKey}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4><b>Organization Type:</b> {this.state.organizationType}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4><b>Region:</b> {this.state.region}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n                <br/><br/><br/><br/><br/>\r\n\r\n                <h1> Reviews </h1> <br/><br/><br/>\r\n                <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.getReviews}> Get my reviews </button>\r\n\r\n                <br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Reviewer ID </h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Date </h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Star rating  /5</h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Text</h3></div>                    \r\n                </div>\r\n                <br/><br/>\r\n                <div className=\"row\">\r\n                    {this.state.reviews.map(item => <div className=\"col-3\" style={{marginBottom: '3em'}}> <h5>{item}</h5> </div>)}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(myAccount);","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport { withRouter } from 'react-router-dom';\r\nimport StarRatings from 'react-star-ratings';\r\n\r\n/**\r\n *  This component allows a user to search for another user\r\n *  Displays reviews for a selected user\r\n *  Allows user to submit a review of selected user\r\n */\r\nclass SearchInstitutes extends Component {\r\n    state = {\r\n        user: '',\r\n        uid: '',\r\n        key: '',\r\n        email: '',\r\n        instituteName: '',\r\n        instituteType: '',\r\n        country: '',\r\n        region: '',\r\n        publicEthKey: '',\r\n\r\n        rating: 0,\r\n        canReview: false,\r\n        reviewText: '',\r\n        reviews: [],\r\n        detailsFound: false,\r\n    }\r\n\r\n    /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* Find selected institute in Firebase database */\r\n    getInstitutes = async(e) => {\r\n        e.preventDefault()\r\n        var _key = this.state.key\r\n        const loc = firebase.database().ref('/users/' + _key)\r\n        console.log(loc)\r\n        loc.once('value', snapshot => {\r\n            if(snapshot.exists()){\r\n                console.log('exists')\r\n                this.setState({\r\n                    email: snapshot.child('email').val(),\r\n                    instituteName: snapshot.child('organizationName').val(),\r\n                    instituteType: snapshot.child('organizationType').val(),\r\n                    region: snapshot.child('Region').val(),\r\n                    country: snapshot.child('country').val(),\r\n                    publicEthKey: snapshot.child('EthKey').val(),\r\n                    canReview: true,\r\n                    detailsFound: true\r\n                })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    canReview: false,\r\n                    detailsFound: false\r\n                })\r\n                alert(\"No Institute Found\")\r\n            }\r\n        })\r\n        this.setState({user: firebase.auth().currentUser})\r\n        this.setState({uid : firebase.auth().currentUser.uid})\r\n    }\r\n\r\n    /* changes the star rating if user found */\r\n    changeRating = async( newRating, name ) =>{\r\n        if(this.state.canReview){\r\n            this.setState({\r\n                rating: newRating\r\n            });\r\n        }\r\n        else {\r\n            alert(\"Cannot review until you search for an institute\")\r\n        }\r\n    }\r\n\r\n    /* adds rating to firebase database */\r\n    addReview = async() => {\r\n        //check user has given a star rating\r\n        if(this.state.rating <= 0){\r\n            alert(\"Please select a rating before submitting\")\r\n        }\r\n        else if(this.state.uid == this.state.key)\r\n        {\r\n            alert(\"You can't review yourself\")\r\n        }\r\n        else{\r\n            //get student details from state variables & current user uid\r\n            var _uid = this.state.uid\r\n            // var _uid = firebase.auth().currentUser.uid\r\n            var _institiuteID = this.state.key\r\n            let _newDate = new Date()\r\n            _newDate = _newDate.toDateString()\r\n            var _rating = this.state.rating\r\n            var _reviewText = this.state.reviewText\r\n\r\n            // database.ref.students.uid.studentNumber \r\n            const db = firebase.database()\r\n            db.ref().child(\"reviews\").child(_institiuteID).child(_uid).set(\r\n                {   \r\n                    rating: _rating,\r\n                    date: _newDate,\r\n                    text: _reviewText\r\n                }\r\n            );\r\n            alert(\"Review sent\")\r\n        }\r\n    }\r\n\r\n    /* Find reviews in firebase database for selected institute */\r\n    getReviews = async (e) => {\r\n        e.preventDefault()\r\n        if(this.state.canReview){\r\n            var _keySearch = this.state.key\r\n            // get reviews for the current user\r\n            const loc2 = firebase.database().ref('/reviews/' + _keySearch)\r\n            var theReviews = []\r\n            loc2.once('value', snapshot => {\r\n                if(snapshot.exists()) {\r\n                    var i = 0;\r\n                    snapshot.forEach(child => {\r\n                        var theVal = child.val()\r\n                        theReviews.push(theVal)\r\n                        var _reviewer = child.key\r\n                        var _date = theReviews[i].date\r\n                        var _rating = theReviews[i].rating\r\n                        var _text = theReviews[i].text\r\n                        i++\r\n                        this.setState({reviews: this.state.reviews.concat([_reviewer, _date, _rating, _text])})\r\n                    })\r\n                } \r\n                else {\r\n                    alert(\"No Reviews Found\")\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Cannot see reviews until you search for an institute\")\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                this.setState({user: firebase.auth().currentUser}) //not needed?\r\n                this.setState({uid: firebase.auth().currentUser.uid })\r\n            } else {\r\n                // No user is signed in.\r\n                //redirect to login\r\n                this.props.history.push('/login')\r\n            }\r\n            }.bind(this))\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            !this.state.detailsFound ? \r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}> \r\n                <h1> Search for an institute </h1><br/>\r\n\r\n                <div align=\"center\">\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.key} onChange={this.handleChange} className=\"form-control\" id=\"key\" type=\"text\" name=\"key\" placeholder=\"Institute ID\" required/> \r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.getInstitutes}> Search </button>\r\n                    </form>\r\n                </div>\r\n            </div> :\r\n\r\n            <div align=\"center\"className=\"container\" style={{paddingTop: '3em'}}>\r\n                <h1> Search for an institute </h1><br/>\r\n\r\n                <div align=\"center\">\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <input value={this.state.key} onChange={this.handleChange} className=\"form-control\" id=\"key\" type=\"text\" name=\"key\" placeholder=\"Institute ID\" required/> \r\n                        </div>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.getInstitutes}> Search </button>\r\n                    </form>\r\n                </div>\r\n                <br/><br/><br/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Institute Name </h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Institute Type </h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Country </h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.instituteName}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.instituteType}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.country}</h4>\r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                <br/><br/>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Region </h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Email </h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Metamask ID </h3>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.region}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.email}</h4>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h4>{this.state.publicEthKey}</h4>\r\n                    </div>\r\n                </div>\r\n                <br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h3>Review this institute?</h3><br/><br/><br/><br/>\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.addReview}> Submit Review </button>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <StarRatings\r\n                            rating={this.state.rating}\r\n                            starRatedColor=\"purple\"\r\n                            changeRating={this.changeRating}\r\n                            numberOfStars={5}\r\n                            name='rating'\r\n                        />\r\n                        <br/><br/><br/><br/>\r\n                        <label>Add some text to your review</label><br/>\r\n                        <textarea value={this.state.reviewText} onChange={this.handleChange} id=\"reviewText\" name=\"reviewText\" style={{minWidth: '40%', minHeight: '14em'}}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <br/><br/><br/><br/>\r\n                \r\n                <h3>See this institute's reviews</h3><br/><br/><br/>\r\n                <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.getReviews}> Get Reviews </button>\r\n                \r\n\r\n                <br/><br/><br/><br/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Reviewer ID </h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Date </h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Star rating  /5</h3></div>\r\n                    <div className=\"col-3\" ><h3 className=\"text-white\" style={{backgroundColor: '#B65DF3', padding: '.2em'}}>Text</h3></div>                    \r\n                </div>\r\n                <br/><br/>\r\n                <div className=\"row\">\r\n                    \r\n                    {this.state.reviews.map(item => <div className=\"col-3\" style={{marginBottom: '3em'}}> <h5>{item}</h5> </div>)}\r\n                </div>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchInstitutes);","/**\r\n *  Author: Neil Grogan C00205522\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport { withRouter, BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport firebase from './components/Firebase/firebase';\r\nimport getWeb3 from \"./components/utils/getWeb3\";\r\nimport storehash from './components/IPFS/storehash';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nimport NavigationBar from './components/Nav/NavigationBar';\r\nimport Welcome from './components/Home/welcome';\r\nimport Login from './components/Auth/login';\r\nimport SignUp from './components/Auth/signup';\r\nimport FileUpload from './components/Dapp/FileUpload';\r\nimport FileRetrieve from './components/Dapp/FileRetrieve';\r\nimport viewStudent from './components/Student/viewStudent';\r\nimport Footer from './components/Home/Footer';\r\nimport myAccount from './components/Account/myAccount';\r\nimport SearchInstitute from './components/Institute/SearchInstitutes';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        user: {},\r\n        /* web3 library for connecting to a blockchain network */\r\n        web3: '',\r\n        /* ethereum smart contract address */\r\n        ethAddress: '',\r\n        /* metamask account */\r\n        account: '0x0',\r\n    }\r\n\r\n    /* checks if a user's auth status has changes i.e. logged in or out */\r\n    authListener() {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if(user) {\r\n                this.setState({user});\r\n            }\r\n            else {\r\n                this.setState({user: null});\r\n            }\r\n        });\r\n    }\r\n\r\n    /* runs when the page loads */\r\n    componentDidMount = async () =>{\r\n        this.authListener()\r\n\r\n        /* enable the web3 library */\r\n        const Web3 = await getWeb3();\r\n        this.setState({web3: Web3})\r\n        /* get contract address */\r\n        const ethAddress = await storehash.options.address\r\n        this.setState({ethAddress})\r\n\r\n        /* set account for Blockchain network */\r\n        this.setState({account: await Web3.eth.getAccounts()})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n            <BrowserRouter>\r\n                <div className=\"pb-5\" style={{marginBottom: \"10em\"}}>\r\n                    <NavigationBar />\r\n                    <Switch>\r\n                        <Route exact path='/' component={Welcome} />\r\n                        <Route exact path='/login' component={Login} /> \r\n                        <Route exact path='/signup' component={SignUp} />\r\n                        <Route exact path='/FileUpload' render={\r\n                            // pushes ethereum address and metamask account down to child component\r\n                            (props) => <FileUpload {...props} acc={this.state.account} ethAdd={this.state.ethAddress} />\r\n                            } />\r\n                        <Route exact path='/viewStudent' component={viewStudent} />\r\n                        <Route exact path='/searchInstitute' component={SearchInstitute} />\r\n                        <Route exact path='/FileRetrieve' component={FileRetrieve}/>\r\n                        <Route exact path='/myAccount' component={myAccount}/>\r\n                    </Switch>\r\n                </div>\r\n            </BrowserRouter>\r\n            <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(App);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter} from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport App from './app';\r\n\r\n\r\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 208;","/** this code was provided by truffle in a package which gave an example of using react with truffle \n * https://truffleframework.com/boxes/react */ \n\n\n/**\n * This file allows us to use the web3 library to interact with metamask and connect to a blockchain\n * \n */\n\nimport Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Acccounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:9545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","module.exports = __webpack_public_path__ + \"static/media/logoOGG.b2bdd034.png\";","module.exports = __webpack_public_path__ + \"static/media/navLogo.c5f04faa.png\";","import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport storehash from '../IPFS/storehash';\r\nimport ipfs from '../IPFS/IPFS';\r\nimport getWeb3 from \"../utils/getWeb3\";\r\nimport { withRouter } from 'react-router-dom';\r\nconst uniqueRandom = require('unique-random');\r\n\r\n/**\r\n *  This component uploads pdfs to IPFS and saves the link to the Blockchain\r\n *  Also creates a firebase database entry for student\r\n */\r\nclass FileUpload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account : this.props.acc,\r\n            ethAddress: this.props.ethAdd,\r\n\r\n            user: '',\r\n            uid: '',\r\n\r\n            // variables for the smart contract and ethereum attributes\r\n            web3Provider: null,\r\n            contracts: null,\r\n            \r\n            // variables of student gotten from form\r\n            StudentName: '',\r\n            StudentNumber: '',\r\n            CourseCode: '',\r\n            CourseName: '',\r\n            idForBlockchain: '',\r\n\r\n            // variables returned from and needed for smart contract & IPFS\r\n            IPFSlink: null,\r\n            buffer: '',\r\n        };\r\n    }\r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* retrieves the file the user uploaded*/\r\n    getFile = (e) => {\r\n        e.preventDefault()\r\n        const file = e.target.files[0]\r\n        let reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => this.convertToBuffer(reader)\r\n    }\r\n\r\n    /* converts file to be suitable to send to IPFS */\r\n    convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer for upload to IPFS\r\n        const buffer = await Buffer.from(reader.result)\r\n        this.setState({buffer})\r\n        \r\n    }\r\n\r\n    /* send the file to IPFS */\r\n    pushToIPFS = async(e) => {\r\n        return new Promise((resolve, reject) => {\r\n            ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n                resolve(ipfsHash[0].hash);\r\n            })\r\n        });\r\n    }\r\n\r\n    /* store IPFS link on blockchain */\r\n    addToBlockchain = async(_ipfsLink, _key) => {\r\n            let newDate = new Date()\r\n            newDate = newDate.getTime()\r\n            var _account = this.state.account[0]\r\n            var _uid = this.state.uid\r\n\r\n            /* call smart contract store document method */\r\n            await storehash.methods.sendDocument(_ipfsLink, newDate, _key, _uid).send({from: _account})\r\n        \r\n    }\r\n\r\n    /** \r\n     * 1: Generates a key\r\n     * 2: Adds the file to IPFS \r\n     * 3: Creates Firebase database entry for student\r\n     * 4: Adds reference to Blockchain\r\n     * */ \r\n    AddMyStuff = async (e) => {\r\n        e.preventDefault()\r\n        /* Generates a random key */\r\n        const rand = uniqueRandom(1, 10000000)\r\n        var key = rand()\r\n\r\n        this.setState({idForBlockchain: key})\r\n\r\n        const ipfsHash = await this.pushToIPFS()\r\n        await this.createStudent(key)\r\n        await this.addToBlockchain(ipfsHash, key)\r\n    }\r\n\r\n    /* add a student record to the database */\r\n    createStudent = async(_key) => {\r\n        //get student details from state variables & current user uid\r\n        var _uid = this.state.uid\r\n        var _studentName = this.state.StudentName\r\n        var _studentNumber = this.state.StudentNumber\r\n        var _courseCode = this.state.CourseCode\r\n        var _courseName = this.state.CourseName\r\n        var _idForBlockchain = _key\r\n\r\n        // database.ref.students.uid.studentNumber \r\n        const db = firebase.database()\r\n        db.ref().child(\"students\").child(_uid).child(_studentNumber).set(\r\n            {   \r\n                studentName: _studentName,\r\n                courseCode: _courseCode,\r\n                courseName: _courseName,\r\n                blockchainKey: _idForBlockchain \r\n            }\r\n        );\r\n        \r\n        alert(\"Student added\")\r\n        \r\n    }\r\n\r\n    componentDidMount = async () => {\r\n    /* check user is logged in */\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n        if (user) {\r\n            // User is signed in.\r\n            this.setState({user: firebase.auth().currentUser}) //not needed?\r\n            this.setState({uid: firebase.auth().currentUser.uid })\r\n        } else {\r\n            // No user is signed in.\r\n            //redirect to login\r\n            this.props.history.push('/login')\r\n        }\r\n        }.bind(this))\r\n\r\n    /* initialize web3 */\r\n    const web3 = await getWeb3();\r\n\r\n    /* get contract address */\r\n    const ethAddress = await storehash.options.address\r\n    this.setState({ethAddress})\r\n\r\n    /* set account for Blockchain network */\r\n    this.setState({account: await web3.eth.getAccounts()})\r\n    }\r\n\r\n    render = () => { \r\n        return (\r\n            <div align=\"center\"className=\"container\" onLoad={this.componentDidMount}>\r\n                <h1> File Upload </h1><br/>\r\n                <h5 style={{fontStyle: \"italic\"}}>( Please make sure you give this page access to your MetaMask! )</h5><br/>\r\n                \r\n                <form>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Please upload a PDF file with your student's details</label>\r\n                        <input value={this.state.name} onChange={this.getFile} accept=\".pdf\" className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} id=\"file\" type=\"file\" name=\"file\" required/>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Name</label>\r\n                        <input value={this.state.StudentName} onChange={this.handleChange} className=\"form-control\" id=\"StudentName\" type=\"text\" name=\"StudentName\" placeholder=\"Student Name\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Number</label>\r\n                        <input value={this.state.StudentNumber || ''} onChange={this.handleChange} className=\"form-control\" id=\"StudentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student Number\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Code</label>\r\n                        <input value={this.state.CourseCode || ''} onChange={this.handleChange} className=\"form-control\" id=\"CourseCode\" type=\"text\" name=\"CourseCode\" placeholder=\"Course Code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Name</label>\r\n                        <input value={this.state.CourseName || ''} onChange={this.handleChange} className=\"form-control\" id=\"CourseName\" type=\"text\" name=\"CourseName\" placeholder=\"Course Name\" required/>\r\n                    </div>\r\n                        \r\n                    <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.AddMyStuff}> Add Document! </button>\r\n                </form>\r\n                \r\n                \r\n                <br/><br/><br/><br/>\r\n                \r\n                <h1> What information is stored along with your file? </h1> <br/>\r\n                <h5>\r\n                    Your file is actually stored using Interplanitary File System <a href=\"https://ipfs.io/\"> (IPFS) </a> and \r\n                    the unique URL is stored on the Ethereum network. <br/>\r\n\r\n                    We also store your MetaMask wallet public address and the date of the upload. <br /><br />\r\n\r\n                    We'll store a record of who this file was uploaded for along with the link to the document on \r\n                    a central database \r\n                </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(FileUpload);","/* code based on tutorial at https://itnext.io/build-a-simple-ethereum-interplanetary-file-system-ipfs-react-js-dapp-23ff4914ce4e*/\r\n\r\n/**\r\n *  This file allows us to use teh infura api key to make api calls to IPFS\r\n */\r\nconst IPFS = require('ipfs-api');\r\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\nexport default ipfs;","module.exports = __webpack_public_path__ + \"static/media/logoSmall.e308e4b9.png\";"],"sourceRoot":""}