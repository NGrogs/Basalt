{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Account\\\\myAccount.js\";\nimport React, { Component } from 'react';\nimport firebase from '../Firebase/firebase';\n\nvar myAccount =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(myAccount, _Component);\n\n  function myAccount() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, myAccount);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(myAccount)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: '',\n      uid: '',\n      email: '',\n      country: '',\n      region: '',\n      organizationType: '',\n      organizationName: '',\n      publicEthKey: '' //TO-DO get current user \n\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _uid;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                  // User is signed in.\n                  this.setState({\n                    user: firebase.auth().currentUser\n                  }); //not needed?\n\n                  this.setState({\n                    uid: firebase.auth().currentUser.uid\n                  });\n                } else {\n                  // No user is signed in.\n                  //redirect to login\n                  this.props.history.push('/login');\n                }\n              }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n              _uid = _this.state.uid;\n              firebase.database().ref().child(\"users\").child(_uid).once('value').then(function (snapshot) {\n                this.setState({\n                  email: snapshot.val().email,\n                  country: snapshot.val().country,\n                  region: snapshot.val().Region,\n                  organizationName: snapshot.val().organizationName,\n                  organizationType: snapshot.val().organizationType,\n                  publicEthKey: snapshot.val().EthKey\n                });\n              }.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _this;\n  }\n\n  _createClass(myAccount, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \" Account Details \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"User ID: \", this.state.uid), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Email: \", this.state.email), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Organization Name: \", this.state.organizationName), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Organization Type: \", this.state.organizationType), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Country: \", this.state.country), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Region: \", this.state.region), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Public Ethereum Key: \", this.state.publicEthKey));\n    }\n  }]);\n\n  return myAccount;\n}(Component);\n\nexport default myAccount;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Account\\myAccount.js"],"names":["React","Component","firebase","myAccount","state","user","uid","email","country","region","organizationType","organizationName","publicEthKey","componentDidMount","auth","onAuthStateChanged","setState","currentUser","props","history","push","bind","_uid","database","ref","child","once","then","snapshot","val","Region","EthKey"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\n\r\nclass myAccount extends Component {\r\n    state = {\r\n        user: '',\r\n        uid: '',\r\n        email: '',\r\n        country: '',\r\n        region: '',\r\n        organizationType: '',\r\n        organizationName: '',\r\n        publicEthKey: ''\r\n    }\r\n\r\n    //TO-DO get current user \r\n    componentDidMount = async () => {\r\n\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                // User is signed in.\r\n                this.setState({user: firebase.auth().currentUser}) //not needed?\r\n                this.setState({uid: firebase.auth().currentUser.uid })\r\n            } else {\r\n                // No user is signed in.\r\n                //redirect to login\r\n                this.props.history.push('/login')\r\n            }\r\n            }.bind(this))\r\n            var _uid = this.state.uid\r\n            firebase.database().ref().child(\"users\").child(_uid).once('value').then(\r\n                function(snapshot) {\r\n                    this.setState({email: snapshot.val().email, \r\n                        country: snapshot.val().country,\r\n                        region: snapshot.val().Region,\r\n                        organizationName: snapshot.val().organizationName,\r\n                        organizationType: snapshot.val().organizationType,\r\n                        publicEthKey: snapshot.val().EthKey\r\n                    })\r\n                }.bind(this)\r\n            )\r\n        }\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> Account Details </h1> <br/>\r\n\r\n                <h2>User ID: {this.state.uid}</h2>\r\n                <h2>Email: {this.state.email}</h2>\r\n                <h2>Organization Name: {this.state.organizationName}</h2>\r\n                <h2>Organization Type: {this.state.organizationType}</h2>\r\n                <h2>Country: {this.state.country}</h2>\r\n                <h2>Region: {this.state.region}</h2>\r\n                <h2>Public Ethereum Key: {this.state.publicEthKey}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default myAccount;"]},"metadata":{},"sourceType":"module"}