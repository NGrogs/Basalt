{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _readOnlyError from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nvar web3 = new Web3(\"ws://localhost:8546\");\nvar $ = window.$;\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // variable for the smart contract and ethereum attributes\n      web3Provider: null,\n      contracts: {},\n      account: '0x0',\n      loading: false,\n      //not needed?\n      contractInstance: null,\n      // variables of student gotten from form\n      StudentName: '',\n      StudentNumber: '',\n      CourseCode: '',\n      CourseName: '',\n      // perhaps link the id of the account who pushed the data\n      // variables returned from and needed for smart contract\n      IPFSlink: '',\n      idForBlockchain: ''\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.init =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return FileUpload.initWeb3();\n\n            case 2:\n              _context.next = 4;\n              return FileUpload.initContracts();\n\n            case 4:\n              _context.next = 6;\n              return FileUpload.render();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.initWeb3 =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (typeof web3 !== 'undefined') {\n                FileUpload.web3Provider = web3.currentProvider;\n                web3 = (_readOnlyError(\"web3\"), new Web3(web3.currentProvider));\n              } else {\n                window.alert(\"Please connect to Metamask.\");\n              } // Modern dapp browsers...\n\n              /*  if (window.ethereum) {\r\n                    window.web3 = new Web3(ethereum)\r\n                    try {\r\n                    // Request account access if needed\r\n                    await ethereum.enable()\r\n                    // Acccounts now exposed\r\n                    web3.eth.sendTransaction({/* ... */\n\n              /*})\r\n              } catch (error) {\r\n              // User denied account access...\r\n              }\r\n              }\r\n              // Legacy dapp browsers...\r\n              else */\n\n\n              if (window.web3) {\n                FileUpload.web3Provider = web3.currentProvider;\n                window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n                web3.eth.sendTransaction({\n                  /* ... */\n                });\n              } // Non-dapp browsers...\n              else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.initContracts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var contract;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return $.getJSON('MyBasalt.json');\n\n            case 2:\n              contract = _context3.sent;\n              FileUpload.contracts.MyBasalt = TruffleContract(contract);\n              FileUpload.contracts.MyBasalt.setProvider(FileUpload.web3Provider);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.render =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var contract;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //set account for Blockchain network\n              FileUpload.account = web3.eth.accounts[0];\n              _context4.next = 3;\n              return FileUpload.contracts.MyBasalt.deployed();\n\n            case 3:\n              contract = _context4.sent;\n              FileUpload.contractInstance = contract;\n              return _context4.abrupt(\"return\", React.createElement(\"div\", {\n                align: \"center\",\n                className: \"container\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 95\n                },\n                __self: this\n              }, React.createElement(\"h1\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96\n                },\n                __self: this\n              }, \" File Upload \"), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 96\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 97\n                },\n                __self: this\n              }, \"( Please make sure you give this page access to your MetaMask! )\"), React.createElement(\"form\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 99\n                },\n                __self: this\n              }, React.createElement(\"div\", {\n                className: \"form-group \",\n                style: {\n                  width: \"40%\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 101\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102\n                },\n                __self: this\n              }, \"Choose a file to upload\"), React.createElement(\"input\", {\n                value: _this.state.name,\n                onChange: _this.handleChange,\n                className: \"btn btn-primary btn-lg\",\n                id: \"file\",\n                type: \"file\",\n                name: \"file\",\n                required: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 103\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                className: \"form-group \",\n                style: {\n                  width: \"40%\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 105\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 106\n                },\n                __self: this\n              }, \"Student Name\"), React.createElement(\"input\", {\n                value: _this.state.name,\n                onChange: _this.handleChange,\n                className: \"form-control\",\n                id: \"StudentName\",\n                type: \"text\",\n                name: \"StudentName\",\n                placeholder: \"Student Name\",\n                required: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 107\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                className: \"form-group \",\n                style: {\n                  width: \"40%\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 110\n                },\n                __self: this\n              }, \"Student Number\"), React.createElement(\"input\", {\n                value: _this.state.studentNumber,\n                onChange: _this.handleChange,\n                className: \"form-control\",\n                id: \"studentNumber\",\n                type: \"text\",\n                name: \"StudentNumber\",\n                placeholder: \"Student Number\",\n                required: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                className: \"form-group \",\n                style: {\n                  width: \"40%\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 113\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114\n                },\n                __self: this\n              }, \"Course Code\"), React.createElement(\"input\", {\n                value: _this.state.courseCode,\n                onChange: _this.handleChange,\n                className: \"form-control\",\n                id: \"courseCode\",\n                type: \"text\",\n                name: \"courseCode\",\n                placeholder: \"Course Code\",\n                required: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115\n                },\n                __self: this\n              })), React.createElement(\"div\", {\n                className: \"form-group \",\n                style: {\n                  width: \"40%\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118\n                },\n                __self: this\n              }, \"Course Name\"), React.createElement(\"input\", {\n                value: _this.state.courseName,\n                onChange: _this.handleChange,\n                className: \"form-control\",\n                id: \"courseName\",\n                type: \"text\",\n                name: \"courseName\",\n                placeholder: \"Course Name\",\n                required: true,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 119\n                },\n                __self: this\n              })), React.createElement(\"button\", {\n                className: \"btn btn-primary btn-lg\",\n                type: \"submit\",\n                onClick: _this.createStudent,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122\n                },\n                __self: this\n              }, \" Add Document! \")), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 125\n                },\n                __self: this\n              }), React.createElement(\"h1\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }, \" What information is stored along with your file? \"), \" \", React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127\n                },\n                __self: this\n              }), React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 128\n                },\n                __self: this\n              }, \"Your file is actually stored using Interplanitary File System \", React.createElement(\"a\", {\n                href: \"https://ipfs.io/\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129\n                },\n                __self: this\n              }, \" (IPFS) \"), \" and the unique URL is stored on the Ethereum network. \", React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 130\n                },\n                __self: this\n              }), \"We also store your MetaMask wallet public address and the date of the upload. \", React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }), React.createElement(\"br\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132\n                },\n                __self: this\n              }), \"We'll store a record of who this file was uploaded for along with the link to the document on a central database\")));\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    return _this;\n  }\n\n  return FileUpload;\n}(Component);\n\n$(function () {\n  $(window).load(function () {\n    FileUpload.init();\n  });\n});\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\FileUpload.js"],"names":["React","Component","Web3","web3","$","window","FileUpload","state","web3Provider","contracts","account","loading","contractInstance","StudentName","StudentNumber","CourseCode","CourseName","IPFSlink","idForBlockchain","handleChange","e","setState","target","id","value","init","initWeb3","initContracts","render","currentProvider","alert","eth","sendTransaction","console","log","getJSON","contract","MyBasalt","TruffleContract","setProvider","accounts","deployed","width","name","studentNumber","courseCode","courseName","createStudent","load"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst web3 = new Web3(\"ws://localhost:8546\");\r\nconst $ = window.$;\r\n\r\nclass FileUpload extends Component {\r\n    state = {\r\n        // variable for the smart contract and ethereum attributes\r\n        web3Provider: null,\r\n        contracts: {},\r\n        account: '0x0',\r\n        loading: false, //not needed?\r\n        contractInstance: null,\r\n\r\n        // variables of student gotten from form\r\n        StudentName: '',\r\n        StudentNumber: '',\r\n        CourseCode: '',\r\n        CourseName: '',\r\n        // perhaps link the id of the account who pushed the data\r\n\r\n        // variables returned from and needed for smart contract\r\n        IPFSlink: '',\r\n        idForBlockchain: '',\r\n\r\n\r\n    }\r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    init = async () => {\r\n        await FileUpload.initWeb3()\r\n        await FileUpload.initContracts()\r\n        await FileUpload.render()\r\n    }\r\n\r\n    // https://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\r\n    initWeb3 = async () => {\r\n    if (typeof web3 !== 'undefined') {\r\n        FileUpload.web3Provider = web3.currentProvider\r\n        web3 = new Web3(web3.currentProvider)\r\n    } else {\r\n        window.alert(\"Please connect to Metamask.\")\r\n    }\r\n    // Modern dapp browsers...\r\n  /*  if (window.ethereum) {\r\n        window.web3 = new Web3(ethereum)\r\n        try {\r\n        // Request account access if needed\r\n        await ethereum.enable()\r\n        // Acccounts now exposed\r\n        web3.eth.sendTransaction({/* ... *//*})\r\n        } catch (error) {\r\n        // User denied account access...\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else */\r\n    if (window.web3) {\r\n        FileUpload.web3Provider = web3.currentProvider\r\n        window.web3 = new Web3(web3.currentProvider)\r\n        // Acccounts always exposed\r\n      web3.eth.sendTransaction({/* ... */})\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n\r\n}\r\n\r\ninitContracts = async () => {\r\n    const contract = await $.getJSON('MyBasalt.json')\r\n    FileUpload.contracts.MyBasalt = TruffleContract(contract)\r\n    FileUpload.contracts.MyBasalt.setProvider(FileUpload.web3Provider)\r\n}\r\n\r\n    render = async () => {\r\n        //set account for Blockchain network\r\n        FileUpload.account = web3.eth.accounts[0]\r\n\r\n        const contract = await FileUpload.contracts.MyBasalt.deployed()\r\n        FileUpload.contractInstance = contract\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> File Upload </h1><br/>\r\n                <p>( Please make sure you give this page access to your MetaMask! )</p>\r\n                \r\n                <form>\r\n                    \r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Choose a file to upload</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} className=\"btn btn-primary btn-lg\" id=\"file\" type=\"file\" name=\"file\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Name</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} className=\"form-control\" id=\"StudentName\" type=\"text\" name=\"StudentName\" placeholder=\"Student Name\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Number</label>\r\n                        <input value={this.state.studentNumber} onChange={this.handleChange} className=\"form-control\" id=\"studentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student Number\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Code</label>\r\n                        <input value={this.state.courseCode} onChange={this.handleChange} className=\"form-control\" id=\"courseCode\" type=\"text\" name=\"courseCode\" placeholder=\"Course Code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Name</label>\r\n                        <input value={this.state.courseName} onChange={this.handleChange} className=\"form-control\" id=\"courseName\" type=\"text\" name=\"courseName\" placeholder=\"Course Name\" required/>\r\n                    </div>\r\n                        \r\n                    <button className=\"btn btn-primary btn-lg\" type=\"submit\" onClick={this.createStudent}> Add Document! </button>\r\n                </form>\r\n\r\n                <br/><br/><br/><br/>\r\n                \r\n                <h1> What information is stored along with your file? </h1> <br/>\r\n                <p>\r\n                    Your file is actually stored using Interplanitary File System <a href=\"https://ipfs.io/\"> (IPFS) </a> and \r\n                    the unique URL is stored on the Ethereum network. <br/>\r\n\r\n                    We also store your MetaMask wallet public address and the date of the upload. <br /><br />\r\n\r\n                    We'll store a record of who this file was uploaded for along with the link to the document on \r\n                    a central database \r\n                </p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n$( () => {\r\n    $(window).load(() => {\r\n    FileUpload.init()\r\n    })\r\n})\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}