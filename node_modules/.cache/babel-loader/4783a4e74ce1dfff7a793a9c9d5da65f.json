{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _readOnlyError from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\DappTest.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nWeb3 = require('web3');\nvar web3 = new Web3(\"ws://localhost:8546\");\n\nvar Dapptest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dapptest, _Component);\n\n  function Dapptest() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dapptest);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dapptest)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      web3Provider: null,\n      contracts: {},\n      account: '0x0',\n      loading: false,\n      contractInstance: null\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.initWeb3 =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof web3 !== 'undefined') {\n                Dapptest.web3Provider = web3.currentProvider;\n                web3 = (_readOnlyError(\"web3\"), new Web3(web3.currentProvider));\n              } else {\n                window.alert(\"Please connect to Metamask.\");\n              } // Modern dapp browsers...\n\n\n              if (!window.ethereum) {\n                _context.next = 13;\n                break;\n              }\n\n              window.web3 = new Web3(ethereum);\n              _context.prev = 3;\n              _context.next = 6;\n              return ethereum.enable();\n\n            case 6:\n              // Acccounts now exposed\n              web3.eth.sendTransaction({\n                /* ... */\n              });\n              _context.next = 11;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n\n            case 11:\n              _context.next = 14;\n              break;\n\n            case 13:\n              // Legacy dapp browsers...\n              if (window.web3) {\n                Dapptest.web3Provider = web3.currentProvider;\n                window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n                web3.eth.sendTransaction({\n                  /* ... */\n                });\n              } // Non-dapp browsers...\n              else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[3, 9]]);\n    }));\n    return _this;\n  }\n\n  _createClass(Dapptest, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \" This is Dapp Test \"));\n    }\n  }]);\n\n  return Dapptest;\n}(Component);\n\nexport default Dapptest;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\DappTest.js"],"names":["React","Component","Web3","require","web3","Dapptest","state","web3Provider","contracts","account","loading","contractInstance","handleChange","e","setState","target","id","value","initWeb3","currentProvider","window","alert","ethereum","enable","eth","sendTransaction","console","log"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACAA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAAd;AACA,IAAMC,IAAI,GAAG,IAAIF,IAAJ,CAAS,qBAAT,CAAb;;IAEMG,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,SAAS,EAAE,EAFP;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAIJC,MAAAA,OAAO,EAAE,KAJL;AAKJC,MAAAA,gBAAgB,EAAE;AAGrB;;AARO,K;;UASRC,Y,GAAc,UAACC,CAAD,EAAO;AACjB,YAAKC,QAAL,qBACKD,CAAC,CAACE,MAAF,CAASC,EADd,EACmBH,CAAC,CAACE,MAAF,CAASE,KAD5B;AAGH,K;;UAGDC,Q;;;;6BAAW;AAAA;AAAA;AAAA;AAAA;AACX,kBAAI,OAAOd,IAAP,KAAgB,WAApB,EAAiC;AAC7BC,gBAAAA,QAAQ,CAACE,YAAT,GAAwBH,IAAI,CAACe,eAA7B;AACAf,gBAAAA,IAAI,4BAAG,IAAIF,IAAJ,CAASE,IAAI,CAACe,eAAd,CAAH,CAAJ;AACH,eAHD,MAGO;AACHC,gBAAAA,MAAM,CAACC,KAAP,CAAa,6BAAb;AACH,eANU,CAOX;;;AAPW,mBAQPD,MAAM,CAACE,QARA;AAAA;AAAA;AAAA;;AASPF,cAAAA,MAAM,CAAChB,IAAP,GAAc,IAAIF,IAAJ,CAASoB,QAAT,CAAd;AATO;AAAA;AAAA,qBAYDA,QAAQ,CAACC,MAAT,EAZC;;AAAA;AAaP;AACAnB,cAAAA,IAAI,CAACoB,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,eAAzB;AAdO;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmBX;AACK,kBAAIL,MAAM,CAAChB,IAAX,EAAiB;AAClBC,gBAAAA,QAAQ,CAACE,YAAT,GAAwBH,IAAI,CAACe,eAA7B;AACAC,gBAAAA,MAAM,CAAChB,IAAP,GAAc,IAAIF,IAAJ,CAASE,IAAI,CAACe,eAAd,CAAd,CAFkB,CAGlB;;AACFf,gBAAAA,IAAI,CAACoB,GAAL,CAASC,eAAT,CAAyB;AAAC;AAAD,iBAAzB;AACD,eALI,CAML;AANK,mBAOA;AACDC,kBAAAA,OAAO,CAACC,GAAR,CAAY,qEAAZ;AACH;;AA7BU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAgCF;AACL,aACI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ,CADJ;AAOH;;;;EAzDkB1B,S;;AA4DvB,eAAeI,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport Web3 from 'web3';\r\nWeb3 = require('web3');\r\nconst web3 = new Web3(\"ws://localhost:8546\");\r\n\r\nclass Dapptest extends Component {\r\n    state = {\r\n        web3Provider: null,\r\n        contracts: {},\r\n        account: '0x0',\r\n        loading: false,\r\n        contractInstance: null,\r\n    }\r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    // https://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\r\n    initWeb3 = async () => {\r\n    if (typeof web3 !== 'undefined') {\r\n        Dapptest.web3Provider = web3.currentProvider\r\n        web3 = new Web3(web3.currentProvider)\r\n    } else {\r\n        window.alert(\"Please connect to Metamask.\")\r\n    }\r\n    // Modern dapp browsers...\r\n    if (window.ethereum) {\r\n        window.web3 = new Web3(ethereum)\r\n        try {\r\n        // Request account access if needed\r\n        await ethereum.enable()\r\n        // Acccounts now exposed\r\n        web3.eth.sendTransaction({/* ... */})\r\n        } catch (error) {\r\n        // User denied account access...\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else if (window.web3) {\r\n        Dapptest.web3Provider = web3.currentProvider\r\n        window.web3 = new Web3(web3.currentProvider)\r\n        // Acccounts always exposed\r\n      web3.eth.sendTransaction({/* ... */})\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> This is Dapp Test </h1>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dapptest;"]},"metadata":{},"sourceType":"module"}