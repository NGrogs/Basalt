{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport firebase from '../Firebase/firebase';\nimport storehash from '../IPFS/storehash';\nimport ipfs from '../IPFS/IPFS';\nimport getWeb3 from \"../utils/getWeb3\";\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      user: '',\n      uid: '',\n      // variable for the smart contract and ethereum attributes\n      web3Provider: null,\n      contracts: null,\n      account: '0x0',\n      // variables of student gotten from form\n      StudentName: '',\n      StudentNumber: '',\n      CourseCode: '',\n      CourseName: '',\n      // variables returned from and needed for smart contract\n      IPFSlink: null,\n      buffer: '',\n      ethAddress: '',\n      idForBlockchain: '',\n      successMessage: ''\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.getFile = function (e) {\n      e.preventDefault();\n      var file = e.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    };\n\n    _this.convertToBuffer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.pushToIPFS =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n\n                  _this.setState({\n                    IPFSlink: ipfsHash[0].hash\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.addToBlockchain =\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(e) {\n        var newDate, documentId;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                e.preventDefault(); //get todays date\n\n                newDate = new Date(); //call the smart contract method to create a new document\n\n                documentId = storehash.methods.sendDocument(_this.state.IPFSlink, newDate);\n\n                _this.setState({\n                  idForBlockchain: documentId\n                });\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.createStudent =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var uid, _studentName, _studentNumber, _courseCode, _courseName, _idForBlockchain, db;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              //get student details from state variables\n              uid = _this.state.uid;\n              _studentName = _this.state.studentName;\n              _studentNumber = _this.state.studentNumber;\n              _courseCode = _this.state.courseCode;\n              _courseName = _this.state.courseName;\n              _idForBlockchain = _this.state.idForBlockchain;\n              db = firebase.database();\n              db.ref().child(\"students\").child(uid).child(_studentNumber).set({\n                studentName: _studentName,\n                courseCode: _courseCode,\n                courseName: _courseName,\n                blockchainKey: _idForBlockchain\n              }).then(_this.setState({\n                successMessage: 'Student added'\n              }));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var web3, ethAddress;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              firebase.auth().onAuthStateChanged(function (user) {\n                if (user) {\n                  // User is signed in.\n                  this.setState({\n                    user: firebase.auth().currentUser\n                  }); // this.setState({uid: firebase.auth().currentUser.uid })\n                } else {// No user is signed in.\n                    //redirect to login\n                  }\n              });\n              _context5.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context5.sent;\n              _context5.next = 6;\n              return storehash.options.address;\n\n            case 6:\n              ethAddress = _context5.sent;\n\n              _this.setState({\n                ethAddress: ethAddress\n              }); //set account for Blockchain network\n\n\n              _context5.t0 = _this;\n              _context5.next = 11;\n              return web3.eth.getAccounts();\n\n            case 11:\n              _context5.t1 = _context5.sent;\n              _context5.t2 = {\n                account: _context5.t1\n              };\n\n              _context5.t0.setState.call(_context5.t0, _context5.t2);\n\n            case 14:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \" File Upload \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"( Please make sure you give this page access to your MetaMask! )\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, _this.state.successMessage), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Ethereum Contract address: \", _this.state.ethAddress), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Your metamask account: \", _this.state.account[0]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Choose a file to upload\"), React.createElement(\"input\", {\n        value: _this.state.name,\n        onChange: _this.getFile,\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        id: \"file\",\n        type: \"file\",\n        name: \"file\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        type: \"submit\",\n        onClick: _this.pushToIPFS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \" Push Document to IPFS \")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"The IPFS file address: \", _this.state.IPFSlink), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(\"input\", {\n        value: _this.state.name,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"StudentName\",\n        type: \"text\",\n        name: \"StudentName\",\n        placeholder: \"Student Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Student Number\"), React.createElement(\"input\", {\n        value: _this.state.studentNumber,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"studentNumber\",\n        type: \"text\",\n        name: \"StudentNumber\",\n        placeholder: \"Student Number\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Course Code\"), React.createElement(\"input\", {\n        value: _this.state.courseCode,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"courseCode\",\n        type: \"text\",\n        name: \"courseCode\",\n        placeholder: \"Course Code\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"input\", {\n        value: _this.state.courseName,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"courseName\",\n        type: \"text\",\n        name: \"courseName\",\n        placeholder: \"Course Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        type: \"submit\",\n        onClick: _this.addToBlockchain,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \" Add Document! \")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \" What information is stored along with your file? \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Your file is actually stored using Interplanitary File System \", React.createElement(\"a\", {\n        href: \"https://ipfs.io/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \" (IPFS) \"), \" and the unique URL is stored on the Ethereum network. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), \"We also store your MetaMask wallet public address and the date of the upload. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), \"We'll store a record of who this file was uploaded for along with the link to the document on a central database\"));\n    };\n\n    return _this;\n  }\n\n  return FileUpload;\n}(Component);\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\FileUpload.js"],"names":["React","Component","firebase","storehash","ipfs","getWeb3","FileUpload","state","user","uid","web3Provider","contracts","account","StudentName","StudentNumber","CourseCode","CourseName","IPFSlink","buffer","ethAddress","idForBlockchain","successMessage","handleChange","e","setState","target","id","value","getFile","preventDefault","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","pushToIPFS","add","err","ipfsHash","console","log","hash","addToBlockchain","newDate","Date","documentId","methods","sendDocument","createStudent","_studentName","studentName","_studentNumber","studentNumber","_courseCode","courseCode","_courseName","courseName","_idForBlockchain","db","database","ref","child","set","blockchainKey","then","componentDidMount","auth","onAuthStateChanged","currentUser","web3","options","address","eth","getAccounts","render","fontStyle","width","name","backgroundColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport firebase from '../Firebase/firebase';\r\nimport storehash from '../IPFS/storehash';\r\nimport ipfs from '../IPFS/IPFS';\r\nimport getWeb3 from \"../utils/getWeb3\";\r\n\r\nclass FileUpload extends Component {\r\n    state = {\r\n        user: '',\r\n        uid: '',\r\n        // variable for the smart contract and ethereum attributes\r\n        web3Provider: null,\r\n        contracts: null,\r\n        account: '0x0',\r\n\r\n        // variables of student gotten from form\r\n        StudentName: '',\r\n        StudentNumber: '',\r\n        CourseCode: '',\r\n        CourseName: '',\r\n\r\n        // variables returned from and needed for smart contract\r\n        IPFSlink: null,\r\n        buffer: '',\r\n        ethAddress: '',\r\n        idForBlockchain: '',\r\n\r\n        successMessage: '',\r\n    }\r\n\r\n    \r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    /* retrieves the file the user uploaded*/\r\n    getFile = (e) => {\r\n        e.preventDefault()\r\n        const file = e.target.files[0]\r\n        let reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => this.convertToBuffer(reader)\r\n    }\r\n\r\n    /* converts file to be suitable to send to IPFS */\r\n    convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer for upload to IPFS\r\n        const buffer = await Buffer.from(reader.result)\r\n        this.setState({buffer})\r\n    }\r\n\r\n    /* send the file to IPFS */\r\n    pushToIPFS = async(e) => {\r\n        e.preventDefault()\r\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n            console.log(err, ipfsHash)\r\n            this.setState({IPFSlink : ipfsHash[0].hash})\r\n        })\r\n    }\r\n\r\n    /* store IPFS link on blockchain */\r\n    addToBlockchain = async(e) => {\r\n        e.preventDefault()\r\n        //get todays date\r\n        let newDate = new Date()\r\n        //call the smart contract method to create a new document\r\n        const documentId = storehash.methods.sendDocument(this.state.IPFSlink, newDate)\r\n        this.setState({idForBlockchain: documentId})\r\n    }\r\n\r\n    //TO-DO\r\n    createStudent = async() => {\r\n        //get student details from state variables\r\n        var uid = this.state.uid\r\n        var _studentName = this.state.studentName\r\n        var _studentNumber = this.state.studentNumber\r\n        var _courseCode = this.state.courseCode\r\n        var _courseName = this.state.courseName\r\n        var _idForBlockchain = this.state.idForBlockchain\r\n\r\n        const db = firebase.database()\r\n        db.ref().child(\"students\").child(uid).child(_studentNumber).set(\r\n            {   studentName: _studentName,\r\n                courseCode: _courseCode,\r\n                courseName: _courseName,\r\n                blockchainKey: _idForBlockchain\r\n            }\r\n        ).then(\r\n            this.setState({successMessage: 'Student added'})\r\n        )\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n        if (user) {\r\n            // User is signed in.\r\n            this.setState({user: firebase.auth().currentUser})\r\n           // this.setState({uid: firebase.auth().currentUser.uid })\r\n        } else {\r\n            // No user is signed in.\r\n            //redirect to login\r\n        }\r\n        })\r\n\r\n    const web3 = await getWeb3();\r\n\r\n    // get contract address\r\n    const ethAddress = await storehash.options.address\r\n    this.setState({ethAddress})\r\n\r\n    //set account for Blockchain network\r\n    this.setState({account: await web3.eth.getAccounts()})\r\n    }\r\n\r\n    render = () => { \r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> File Upload </h1><br/>\r\n                <h5 style={{fontStyle: \"italic\"}}>( Please make sure you give this page access to your MetaMask! )</h5><br/>\r\n\r\n                <h3>{this.state.successMessage}</h3>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\"> \r\n                        <h5>Ethereum Contract address: {this.state.ethAddress}</h5> <br/><br/>\r\n                    </div>\r\n                    <div className=\"col-sm\"> \r\n                        <h5>Your metamask account: {this.state.account[0]}</h5><br/><br/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">   \r\n                        <form>\r\n                            <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                                <label>Choose a file to upload</label>\r\n                                <input value={this.state.name} onChange={this.getFile} className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} id=\"file\" type=\"file\" name=\"file\" required/>\r\n                            </div>\r\n                            <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.pushToIPFS}> Push Document to IPFS </button>\r\n                        </form>\r\n                            <h5>The IPFS file address: {this.state.IPFSlink}</h5><br/><br/>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <label>Student Name</label>\r\n                            <input value={this.state.name} onChange={this.handleChange} className=\"form-control\" id=\"StudentName\" type=\"text\" name=\"StudentName\" placeholder=\"Student Name\" required/>\r\n                        </div>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <label>Student Number</label>\r\n                            <input value={this.state.studentNumber} onChange={this.handleChange} className=\"form-control\" id=\"studentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student Number\" required/>\r\n                        </div>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <label>Course Code</label>\r\n                            <input value={this.state.courseCode} onChange={this.handleChange} className=\"form-control\" id=\"courseCode\" type=\"text\" name=\"courseCode\" placeholder=\"Course Code\" required/>\r\n                        </div>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <label>Course Name</label>\r\n                            <input value={this.state.courseName} onChange={this.handleChange} className=\"form-control\" id=\"courseName\" type=\"text\" name=\"courseName\" placeholder=\"Course Name\" required/>\r\n                        </div>\r\n                            \r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.addToBlockchain}> Add Document! </button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                <br/><br/><br/><br/>\r\n                \r\n                <h1> What information is stored along with your file? </h1> <br/>\r\n                <h5>\r\n                    Your file is actually stored using Interplanitary File System <a href=\"https://ipfs.io/\"> (IPFS) </a> and \r\n                    the unique URL is stored on the Ethereum network. <br/>\r\n\r\n                    We also store your MetaMask wallet public address and the date of the upload. <br /><br />\r\n\r\n                    We'll store a record of who this file was uploaded for along with the link to the document on \r\n                    a central database \r\n                </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}