{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _readOnlyError from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\FileUpload.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nvar web3 = new Web3(\"ws://localhost:8546\");\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // variable for the smart contract and ethereum attributes\n      web3Provider: null,\n      contracts: {},\n      account: '0x0',\n      loading: false,\n      //not needed?\n      contractInstance: null,\n      // variables of student gotten from form\n      StudentName: '',\n      StudentNumber: '',\n      CourseCode: '',\n      CourseName: '' // perhaps link the id of the account who pushed the data\n      // variables returned from smart contract\n\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.initWeb3 =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (typeof web3 !== 'undefined') {\n                FileUpload.web3Provider = web3.currentProvider;\n                web3 = (_readOnlyError(\"web3\"), new Web3(web3.currentProvider));\n              } else {\n                window.alert(\"Please connect to Metamask.\");\n              } // Modern dapp browsers...\n\n              /*  if (window.ethereum) {\r\n                    window.web3 = new Web3(ethereum)\r\n                    try {\r\n                    // Request account access if needed\r\n                    await ethereum.enable()\r\n                    // Acccounts now exposed\r\n                    web3.eth.sendTransaction({/* ... */\n\n              /*})\r\n              } catch (error) {\r\n              // User denied account access...\r\n              }\r\n              }\r\n              // Legacy dapp browsers...\r\n              else */\n\n\n              if (window.web3) {\n                FileUpload.web3Provider = web3.currentProvider;\n                window.web3 = new Web3(web3.currentProvider); // Acccounts always exposed\n\n                web3.eth.sendTransaction({\n                  /* ... */\n                });\n              } // Non-dapp browsers...\n              else {\n                  console.log('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(FileUpload, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \" File Upload \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"( Please make sure you give this page access to your MetaMask! )\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Choose a file to upload\"), React.createElement(\"input\", {\n        value: this.state.name,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"file\",\n        type: \"file\",\n        name: \"file\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(\"input\", {\n        value: this.state.name,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"StudentName\",\n        type: \"text\",\n        name: \"StudentName\",\n        placeholder: \"Student Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Student Number\"), React.createElement(\"input\", {\n        value: this.state.studentNumber,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"studentNumber\",\n        type: \"text\",\n        name: \"StudentNumber\",\n        placeholder: \"Student Number\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Course Code\"), React.createElement(\"input\", {\n        value: this.state.courseCode,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"courseCode\",\n        type: \"text\",\n        name: \"courseCode\",\n        placeholder: \"Course Code\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"input\", {\n        value: this.state.courseName,\n        onChange: this.handleChange,\n        className: \"form-control\",\n        id: \"courseName\",\n        type: \"text\",\n        name: \"courseName\",\n        placeholder: \"Course Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-lg\",\n        type: \"submit\",\n        onClick: this.createStudent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" Add Document! \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" What information is stored along with your file? \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Your file is actually stored using Interplanitary File System \", React.createElement(\"a\", {\n        href: \"https://ipfs.io/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \" (IPFS) \"), \" and the unique URL is stored on the Ethereum network. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), \"We also store your MetaMask wallet public address and the date of the upload. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), \"We'll store a record of who this file was uploaded for along with the link to the document on a central database\"));\n    }\n  }]);\n\n  return FileUpload;\n}(Component);\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\FileUpload.js"],"names":["React","Component","Web3","web3","FileUpload","state","web3Provider","contracts","account","loading","contractInstance","StudentName","StudentNumber","CourseCode","CourseName","handleChange","e","setState","target","id","value","initWeb3","currentProvider","window","alert","eth","sendTransaction","console","log","width","name","studentNumber","courseCode","courseName","createStudent"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Web3 from 'web3';\r\n\r\nconst web3 = new Web3(\"ws://localhost:8546\");\r\n\r\nclass FileUpload extends Component {\r\n    state = {\r\n        // variable for the smart contract and ethereum attributes\r\n        web3Provider: null,\r\n        contracts: {},\r\n        account: '0x0',\r\n        loading: false, //not needed?\r\n        contractInstance: null,\r\n\r\n        // variables of student gotten from form\r\n        StudentName: '',\r\n        StudentNumber: '',\r\n        CourseCode: '',\r\n        CourseName: '',\r\n        // perhaps link the id of the account who pushed the data\r\n\r\n        // variables returned from smart contract\r\n\r\n\r\n    }\r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    // https://medium.com/metamask/https-medium-com-metamask-breaking-change-injecting-web3-7722797916a8\r\n    initWeb3 = async () => {\r\n    if (typeof web3 !== 'undefined') {\r\n        FileUpload.web3Provider = web3.currentProvider\r\n        web3 = new Web3(web3.currentProvider)\r\n    } else {\r\n        window.alert(\"Please connect to Metamask.\")\r\n    }\r\n    // Modern dapp browsers...\r\n  /*  if (window.ethereum) {\r\n        window.web3 = new Web3(ethereum)\r\n        try {\r\n        // Request account access if needed\r\n        await ethereum.enable()\r\n        // Acccounts now exposed\r\n        web3.eth.sendTransaction({/* ... *//*})\r\n        } catch (error) {\r\n        // User denied account access...\r\n        }\r\n    }\r\n    // Legacy dapp browsers...\r\n    else */\r\n    if (window.web3) {\r\n        FileUpload.web3Provider = web3.currentProvider\r\n        window.web3 = new Web3(web3.currentProvider)\r\n        // Acccounts always exposed\r\n      web3.eth.sendTransaction({/* ... */})\r\n    }\r\n    // Non-dapp browsers...\r\n    else {\r\n        console.log('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n}\r\n\r\n    render() {\r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> File Upload </h1><br/>\r\n                <p>( Please make sure you give this page access to your MetaMask! )</p>\r\n                \r\n                <form>\r\n                    \r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Choose a file to upload</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} className=\"form-control\" id=\"file\" type=\"file\" name=\"file\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Name</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} className=\"form-control\" id=\"StudentName\" type=\"text\" name=\"StudentName\" placeholder=\"Student Name\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Number</label>\r\n                        <input value={this.state.studentNumber} onChange={this.handleChange} className=\"form-control\" id=\"studentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student Number\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Code</label>\r\n                        <input value={this.state.courseCode} onChange={this.handleChange} className=\"form-control\" id=\"courseCode\" type=\"text\" name=\"courseCode\" placeholder=\"Course Code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Name</label>\r\n                        <input value={this.state.courseName} onChange={this.handleChange} className=\"form-control\" id=\"courseName\" type=\"text\" name=\"courseName\" placeholder=\"Course Name\" required/>\r\n                    </div>\r\n                        \r\n                    <button className=\"btn btn-primary btn-lg\" type=\"submit\" onClick={this.createStudent}> Add Document! </button>\r\n                </form>\r\n\r\n                <br/><br/><br/><br/>\r\n                \r\n                <h1> What information is stored along with your file? </h1> <br/>\r\n                <p>\r\n                    Your file is actually stored using Interplanitary File System <a href=\"https://ipfs.io/\"> (IPFS) </a> and \r\n                    the unique URL is stored on the Ethereum network. <br/>\r\n\r\n                    We also store your MetaMask wallet public address and the date of the upload. <br /><br />\r\n\r\n                    We'll store a record of who this file was uploaded for along with the link to the document on \r\n                    a central database \r\n                </p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}