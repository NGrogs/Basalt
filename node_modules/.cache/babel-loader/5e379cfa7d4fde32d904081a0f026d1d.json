{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\FileUpload.js\";\nimport React, { Component } from 'react'; //import Web3 from 'web3';\n\nimport BasaltStoreContract from \"./../../contracts/BasaltStore.json\";\nimport storehash from '../IPFS/storehash';\nimport ipfs from '../IPFS/IPFS'; //var web3 = new Web3(\"http://localhost:8545\");\n\nimport getWeb3 from \"../utils/getWeb3\";\nvar web3 = getWeb3();\n\nvar FileUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileUpload, _Component);\n\n  function FileUpload() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUpload);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUpload)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      // variable for the smart contract and ethereum attributes\n      web3Provider: null,\n      contracts: null,\n      account: '0x0',\n      loading: false,\n      //not needed?\n      contractInstance: null,\n      // variables of student gotten from form\n      StudentName: '',\n      StudentNumber: '',\n      CourseCode: '',\n      CourseName: '',\n      // perhaps link the id of the account who pushed the data\n      // variables returned from and needed for smart contract\n      IPFSlink: null,\n      buffer: '',\n      ethAddress: '',\n      idForBlockchain: ''\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.getFile = function (e) {\n      e.preventDefault();\n      var file = e.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    };\n\n    _this.convertToBuffer =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(reader) {\n        var buffer;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Buffer.from(reader.result);\n\n              case 2:\n                buffer = _context.sent;\n\n                _this.setState({\n                  buffer: buffer\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.pushToIPFS =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return ipfs.add(_this.state.buffer, function (err, ipfsHash) {\n                  console.log(err, ipfsHash);\n\n                  _this.setState({\n                    IPFSlink: ipfsHash[0].hash\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.initContracts();\n\n            case 2:\n              _context3.next = 4;\n              return _this.render();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    _this.initContracts =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var ethAddress;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return storehash.options.address;\n\n            case 2:\n              ethAddress = _context4.sent;\n\n              _this.setState({\n                ethAddress: ethAddress\n              }); //set account for Blockchain network\n\n\n              _context4.t0 = _this;\n              _context4.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              _context4.t1 = _context4.sent;\n              _context4.t2 = {\n                account: _context4.t1\n              };\n\n              _context4.t0.setState.call(_context4.t0, _context4.t2);\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \" File Upload \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Ethereum Contract address: \", _this.state.ethAddress), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"The IPFS file address: \", _this.state.IPFSlink), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"( Please make sure you give this page access to your MetaMask! )\"), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Your metamask account: \", _this.state.account[0]), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Choose a file to upload\"), React.createElement(\"input\", {\n        value: _this.state.name,\n        onChange: _this.getFile,\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        id: \"file\",\n        type: \"file\",\n        name: \"file\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        type: \"submit\",\n        onClick: _this.pushToIPFS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Push Document to IPFS \"), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Student Name\"), React.createElement(\"input\", {\n        value: _this.state.name,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"StudentName\",\n        type: \"text\",\n        name: \"StudentName\",\n        placeholder: \"Student Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Student Number\"), React.createElement(\"input\", {\n        value: _this.state.studentNumber,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"studentNumber\",\n        type: \"text\",\n        name: \"StudentNumber\",\n        placeholder: \"Student Number\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Course Code\"), React.createElement(\"input\", {\n        value: _this.state.courseCode,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"courseCode\",\n        type: \"text\",\n        name: \"courseCode\",\n        placeholder: \"Course Code\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Course Name\"), React.createElement(\"input\", {\n        value: _this.state.courseName,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"courseName\",\n        type: \"text\",\n        name: \"courseName\",\n        placeholder: \"Course Name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        type: \"submit\",\n        onClick: _this.pushToIPFS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \" Add Document! \")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \" What information is stored along with your file? \"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Your file is actually stored using Interplanitary File System \", React.createElement(\"a\", {\n        href: \"https://ipfs.io/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" (IPFS) \"), \" and the unique URL is stored on the Ethereum network. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), \"We also store your MetaMask wallet public address and the date of the upload. \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), \"We'll store a record of who this file was uploaded for along with the link to the document on a central database\"));\n    };\n\n    return _this;\n  }\n\n  return FileUpload;\n}(Component);\n\nexport default FileUpload;","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\FileUpload.js"],"names":["React","Component","BasaltStoreContract","storehash","ipfs","getWeb3","web3","FileUpload","state","web3Provider","contracts","account","loading","contractInstance","StudentName","StudentNumber","CourseCode","CourseName","IPFSlink","buffer","ethAddress","idForBlockchain","handleChange","e","setState","target","id","value","getFile","preventDefault","file","files","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","pushToIPFS","add","err","ipfsHash","console","log","hash","componentDidMount","initContracts","render","options","address","eth","getAccounts","width","name","backgroundColor","studentNumber","courseCode","courseName"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n//import Web3 from 'web3';\r\nimport BasaltStoreContract from \"./../../contracts/BasaltStore.json\";\r\n\r\nimport storehash from '../IPFS/storehash';\r\nimport ipfs from '../IPFS/IPFS';\r\n\r\n//var web3 = new Web3(\"http://localhost:8545\");\r\n\r\nimport getWeb3 from \"../utils/getWeb3\";\r\nconst web3 =  getWeb3();\r\nclass FileUpload extends Component {\r\n    state = {\r\n        // variable for the smart contract and ethereum attributes\r\n        web3Provider: null,\r\n        contracts: null,\r\n        account: '0x0',\r\n        loading: false, //not needed?\r\n        contractInstance: null,\r\n\r\n        // variables of student gotten from form\r\n        StudentName: '',\r\n        StudentNumber: '',\r\n        CourseCode: '',\r\n        CourseName: '',\r\n        // perhaps link the id of the account who pushed the data\r\n\r\n        // variables returned from and needed for smart contract\r\n        IPFSlink: null,\r\n        buffer: '',\r\n        ethAddress: '',\r\n        idForBlockchain: '',\r\n\r\n\r\n    }\r\n\r\n     /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    getFile = (e) => {\r\n        e.preventDefault()\r\n        const file = e.target.files[0]\r\n        let reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => this.convertToBuffer(reader)\r\n\r\n    }\r\n\r\n    convertToBuffer = async(reader) => {\r\n        //file is converted to a buffer for upload to IPFS\r\n        const buffer = await Buffer.from(reader.result)\r\n        this.setState({buffer})\r\n    }\r\n\r\n    pushToIPFS = async(e) => {\r\n        e.preventDefault()\r\n        await ipfs.add(this.state.buffer, (err, ipfsHash) => {\r\n            console.log(err, ipfsHash)\r\n            this.setState({IPFSlink : ipfsHash[0].hash})\r\n        })\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        await this.initContracts()\r\n        await this.render() \r\n    }\r\n\r\n\r\ninitContracts = async () => {\r\n    const ethAddress = await storehash.options.address\r\n    this.setState({ethAddress})\r\n\r\n    //set account for Blockchain network\r\n\r\n    this.setState({account: await web3.eth.getAccounts()})\r\n\r\n\r\n}\r\n\r\n    render = () => { \r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> File Upload </h1><br/>\r\n                <h2>Ethereum Contract address: {this.state.ethAddress}</h2> <br/><br/>\r\n                <h2>The IPFS file address: {this.state.IPFSlink}</h2><br/><br/>\r\n                <h5>( Please make sure you give this page access to your MetaMask! )</h5>\r\n\r\n                <h4>Your metamask account: {this.state.account[0]}</h4>\r\n                \r\n                <form>\r\n                    \r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Choose a file to upload</label>\r\n                        <input value={this.state.name} onChange={this.getFile} className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} id=\"file\" type=\"file\" name=\"file\" required/>\r\n                    </div>\r\n\r\n                    <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.pushToIPFS}> Push Document to IPFS </button>\r\n\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Name</label>\r\n                        <input value={this.state.name} onChange={this.handleChange} className=\"form-control\" id=\"StudentName\" type=\"text\" name=\"StudentName\" placeholder=\"Student Name\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Student Number</label>\r\n                        <input value={this.state.studentNumber} onChange={this.handleChange} className=\"form-control\" id=\"studentNumber\" type=\"text\" name=\"StudentNumber\" placeholder=\"Student Number\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Code</label>\r\n                        <input value={this.state.courseCode} onChange={this.handleChange} className=\"form-control\" id=\"courseCode\" type=\"text\" name=\"courseCode\" placeholder=\"Course Code\" required/>\r\n                    </div>\r\n                    <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                        <label>Course Name</label>\r\n                        <input value={this.state.courseName} onChange={this.handleChange} className=\"form-control\" id=\"courseName\" type=\"text\" name=\"courseName\" placeholder=\"Course Name\" required/>\r\n                    </div>\r\n                        \r\n                    <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.pushToIPFS}> Add Document! </button>\r\n                </form>\r\n\r\n                <br/><br/><br/><br/>\r\n                \r\n                <h1> What information is stored along with your file? </h1> <br/>\r\n                <h5>\r\n                    Your file is actually stored using Interplanitary File System <a href=\"https://ipfs.io/\"> (IPFS) </a> and \r\n                    the unique URL is stored on the Ethereum network. <br/>\r\n\r\n                    We also store your MetaMask wallet public address and the date of the upload. <br /><br />\r\n\r\n                    We'll store a record of who this file was uploaded for along with the link to the document on \r\n                    a central database \r\n                </h5>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}