{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\elite\\\\Desktop\\\\Blockchain Project\\\\Basalt\\\\src\\\\components\\\\Dapp\\\\FileRetrieve.js\";\nimport React, { Component } from 'react';\nimport storehash from '../IPFS/storehash';\nimport getWeb3 from \"../utils/getWeb3\";\nimport { withRouter } from 'react-router-dom';\n\nvar FileRetrieve =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileRetrieve, _Component);\n\n  function FileRetrieve() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileRetrieve);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileRetrieve)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      web3Provider: null,\n      contracts: null,\n      account: '0x0',\n      // variables of document retrieved\n      idToSearch: '',\n      documentDetails: [],\n      IPFSlink: null,\n      uploadedAddress: '',\n      uploadDate: ''\n      /* updates fields when changed */\n\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.copy = function (e) {\n      _this.IPFSLink.select();\n\n      document.execCommand('copy');\n    };\n\n    _this.retrieveDocument =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _id = _this.state.idToSearch;\n                _context.next = 4;\n                return storehash.methods.getDocument(_id).call();\n\n              case 4:\n                _this.state.documentDetails = _context.sent;\n\n                //check response is empty\n                if (_this.state.documentDetails.length == 0) {} else {\n                  _this.setState({\n                    IPFSlink: _this.state.documentDetails[0]\n                  });\n\n                  _this.setState({\n                    uploadedAddress: _this.state.documentDetails[1]\n                  });\n\n                  _this.setState({\n                    uploadDate: _this.state.documentDetails[2]\n                  });\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var web3, ethAddress;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getWeb3();\n\n            case 2:\n              web3 = _context2.sent;\n              _context2.next = 5;\n              return storehash.options.address;\n\n            case 5:\n              ethAddress = _context2.sent;\n\n              _this.setState({\n                ethAddress: ethAddress\n              }); //set account for Blockchain network\n\n\n              _context2.t0 = _this;\n              _context2.next = 10;\n              return web3.eth.getAccounts();\n\n            case 10:\n              _context2.t1 = _context2.sent;\n              _context2.t2 = {\n                account: _context2.t1\n              };\n\n              _context2.t0.setState.call(_context2.t0, _context2.t2);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.render = function () {\n      return React.createElement(\"div\", {\n        align: \"center\",\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" File Retrieve \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Enter key to search:\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group \",\n        style: {\n          width: \"40%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"ID:\"), React.createElement(\"input\", {\n        value: _this.state.idToSearch,\n        onChange: _this.handleChange,\n        className: \"form-control\",\n        id: \"idToSearch\",\n        type: \"text\",\n        name: \"idToSearch\",\n        placeholder: \"ID\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        type: \"submit\",\n        onClick: _this.retrieveDocument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" Find Document! \"))), React.createElement(\"div\", {\n        className: \"col-sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"File details\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Uploader address: \", _this.state.uploadedAddress), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Upload Date \", _this.state.uploadDate), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"IPFS Link: \", _this.state.IPFSlink), \" \", React.createElement(\"button\", {\n        className: \"btn btn-lg text-white\",\n        style: {\n          backgroundColor: \"#B65DF3\"\n        },\n        onClick: _this.CopyLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \" Copy Link! \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Ethereum Contract address:\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" \", _this.state.ethAddress), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        style: {\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"( Please make sure you give this page access to your MetaMask! )\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Your metamask account:\"), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \" \", _this.state.account[0]), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    };\n\n    return _this;\n  }\n\n  return FileRetrieve;\n}(Component);\n\nexport default withRouter(FileRetrieve);","map":{"version":3,"sources":["C:\\Users\\elite\\Desktop\\Blockchain Project\\Basalt\\src\\components\\Dapp\\FileRetrieve.js"],"names":["React","Component","storehash","getWeb3","withRouter","FileRetrieve","state","web3Provider","contracts","account","idToSearch","documentDetails","IPFSlink","uploadedAddress","uploadDate","handleChange","e","setState","target","id","value","copy","IPFSLink","select","document","execCommand","retrieveDocument","preventDefault","_id","methods","getDocument","call","length","componentDidMount","web3","options","address","ethAddress","eth","getAccounts","render","width","backgroundColor","CopyLink","fontStyle"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport storehash from '../IPFS/storehash';\r\nimport getWeb3 from \"../utils/getWeb3\";\r\nimport { withRouter } from 'react-router-dom';\r\nclass FileRetrieve extends Component {\r\n\r\n    state = {\r\n        web3Provider: null,\r\n        contracts: null,\r\n        account: '0x0',\r\n\r\n        // variables of document retrieved\r\n        idToSearch: '',\r\n        documentDetails: [],\r\n        IPFSlink: null,        \r\n        uploadedAddress: '',\r\n        uploadDate: '',\r\n    }\r\n\r\n    /* updates fields when changed */\r\n    handleChange= (e) => {\r\n        this.setState({ \r\n            [e.target.id]: e.target.value \r\n        })\r\n    }\r\n\r\n    copy = (e) => {\r\n        this.IPFSLink.select();\r\n        document.execCommand('copy')\r\n    }\r\n\r\n    retrieveDocument = async (e) => {\r\n        e.preventDefault()\r\n        var _id = this.state.idToSearch\r\n        this.state.documentDetails = await storehash.methods.getDocument(_id).call()\r\n\r\n\r\n        //check response is empty\r\n        if(this.state.documentDetails.length == 0){\r\n\r\n        }\r\n        else {\r\n            this.setState({IPFSlink: this.state.documentDetails[0]})\r\n            this.setState({uploadedAddress: this.state.documentDetails[1]})\r\n            this.setState({uploadDate: this.state.documentDetails[2]})\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const web3 = await getWeb3();\r\n    \r\n        // get contract address\r\n        const ethAddress = await storehash.options.address\r\n        this.setState({ethAddress})\r\n    \r\n        //set account for Blockchain network\r\n        this.setState({account: await web3.eth.getAccounts()})\r\n    }\r\n\r\n    render = () => { \r\n        return (\r\n            <div align=\"center\"className=\"container\">\r\n                <h1> File Retrieve </h1><br/><br/><br/>\r\n\r\n                <div className=\"row\">\r\n                <div className=\"col-sm\"> \r\n                    <h2>Enter key to search:</h2>\r\n                    <form>\r\n                        <div className=\"form-group \" style={{width: \"40%\"}}>\r\n                            <label>ID:</label>\r\n                            <input value={this.state.idToSearch} onChange={this.handleChange} className=\"form-control\" id=\"idToSearch\" type=\"text\" name=\"idToSearch\" placeholder=\"ID\" required/>\r\n                        </div>\r\n\r\n                        <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} type=\"submit\" onClick={this.retrieveDocument}> Find Document! </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-sm\">\r\n                    <h2>File details</h2><br/>\r\n                    <h5>Uploader address: {this.state.uploadedAddress}</h5>\r\n                    <h5>Upload Date {this.state.uploadDate}</h5>\r\n                    <h5>IPFS Link: {this.state.IPFSlink}</h5> <button className=\"btn btn-lg text-white\" style={{backgroundColor: \"#B65DF3\"}} onClick={this.CopyLink} > Copy Link! </button>\r\n                </div>\r\n                </div>\r\n\r\n                <br/><br/><br/><br/><br/><br/>\r\n                <h2>Ethereum Contract address:</h2><h5> {this.state.ethAddress}</h5> <br/><br/>\r\n                    <h5 style={{fontStyle: \"italic\"}}>( Please make sure you give this page access to your MetaMask! )</h5>\r\n\r\n                    <h2>Your metamask account:</h2><h5> {this.state.account[0]}</h5><br/><br/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(FileRetrieve);"]},"metadata":{},"sourceType":"module"}